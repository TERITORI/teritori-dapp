/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  admin: string;
  [k: string]: unknown;
}
export type ExecuteMsg = ExecMsg;
export type ExecMsg = {
  create: {
    destination: string;
    hashlock: string;
    timelock: number;
    [k: string]: unknown;
  };
} | {
  redeem: {
    id: number;
    preimage: string;
    [k: string]: unknown;
  };
} | {
  refund: {
    id: number;
    [k: string]: unknown;
  };
} | {
  change_admin: {
    addr: string;
    [k: string]: unknown;
  };
};
export type QueryMsg = QueryMsg1;
export type QueryMsg1 = {
  admin: {
    [k: string]: unknown;
  };
} | {
  swaps: {
    limit?: number | null;
    max?: Bound | null;
    min?: Bound | null;
    order?: Order | null;
    [k: string]: unknown;
  };
};
export type Bound = {
  inclusive: number;
} | {
  exclusive: number;
};
export type Order = "ascending" | "descending";
export type Addr = string;
export type Timestamp = Uint64;
export type Uint64 = string;
export type SwapState = "created" | {
  redeemed: SwapStateRedeemed;
} | {
  refunded: SwapStateRefunded;
};
export type Uint128 = string;
export interface ListSwapsResult {
  swaps: AtomicSwap[];
  total: number;
}
export interface AtomicSwap {
  created_at: Timestamp;
  creator: Addr;
  destination: Addr;
  hashlock: string;
  state: SwapState;
  timelock: Timestamp;
  value: Coin[];
}
export interface SwapStateRedeemed {
  preimage: string;
  redeemed_at: Timestamp;
}
export interface SwapStateRefunded {
  refunded_at: Timestamp;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}