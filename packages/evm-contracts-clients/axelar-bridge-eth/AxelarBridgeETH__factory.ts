/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AxelarBridgeETH,
  AxelarBridgeETHInterface,
} from "./AxelarBridgeETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasService_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "bridgeNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableUnlock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "riotNftEthAddress",
    outputs: [
      {
        internalType: "contract riotNftEth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "riotNftPolyAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setDisableUnlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract riotNftEth",
        name: "_riotNftEthAddress",
        type: "address",
      },
    ],
    name: "setRiotEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_riotNftPolyAddress",
        type: "string",
      },
    ],
    name: "setRiotPolygon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "unlockRiotNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526003805460ff191660011790553480156200001e57600080fd5b50604051620016a0380380620016a0833981016040819052620000419162000103565b816200004d3362000096565b6001600160a01b038116620000755760405163e6c4247b60e01b815260040160405180910390fd5b6001600160601b0319606091821b811660805291901b1660a052506200013a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000fe57600080fd5b919050565b6000806040838503121562000116578182fd5b6200012183620000e6565b91506200013160208401620000e6565b90509250929050565b60805160601c60a05160601c61151e62000182600039600081816101f001526106cc01526000818161010a01528181610386015281816107690152610954015261151e6000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063aaf2236911610059578063aaf22369146102bb578063ce2cb1e3146102d0578063f2fde38b146102fa578063fa59b6ba1461031a57600080fd5b80638da5cb5b146102275780639f2638fe14610245578063a16e9dcc14610265578063a41096471461029b57600080fd5b806349160658116100c6578063491606581461019e5780635081a1f9146101be5780636a22d8cc146101de578063715018a61461021257600080fd5b8063116191b6146100f85780631a98b2e014610149578063365301fe1461016b5780633bb4d0a51461017e575b600080fd5b34801561010457600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015557600080fd5b50610169610164366004610f79565b61033c565b005b61016961017936600461113a565b610447565b34801561018a57600080fd5b5061016961019936600461113a565b6107dc565b3480156101aa57600080fd5b506101696101b9366004610ed9565b61090a565b3480156101ca57600080fd5b506101696101d9366004610e7a565b610a07565b3480156101ea57600080fd5b5061012c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561021e57600080fd5b50610169610a90565b34801561023357600080fd5b506000546001600160a01b031661012c565b34801561025157600080fd5b5060015461012c906001600160a01b031681565b34801561027157600080fd5b5061012c61028036600461113a565b6004602052600090815260409020546001600160a01b031681565b3480156102a757600080fd5b506101696102b636600461104e565b610af6565b3480156102c757600080fd5b50610169610b67565b3480156102dc57600080fd5b506003546102ea9060ff1681565b6040519015158152602001610140565b34801561030657600080fd5b50610169610315366004610e7a565b610bcd565b34801561032657600080fd5b5061032f610caf565b6040516101409190611367565b6000858560405161034e929190611245565b6040519081900381207f1876eed900000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed9906103cb908e908e908e908e908e9089908d908d908d90600401611308565b602060405180830381600087803b1580156103e557600080fd5b505af11580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610eb9565b61043a57604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561049957600080fd5b505af11580156104ad573d6000803e3d6000fd5b50506001546040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101859052600093506001600160a01b039091169150636352211e90602401602060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610e9d565b90506001600160a01b03811630146105aa5760405162461bcd60e51b815260206004820152600d60248201527f4e6f7420746865204f776e65720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001546040517fc87b56dd000000000000000000000000000000000000000000000000000000008152600481018490526000916001600160a01b03169063c87b56dd90602401600060405180830381600087803b15801561060a57600080fd5b505af115801561061e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261064691908101906110c7565b6000848152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916339081179091559051939450919261068c9287928692016113c7565b60408051601f19818403018152908290527f0c93e3bb00000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb90349061070a90309060029087903390600401611255565b6000604051808303818588803b15801561072357600080fd5b505af1158015610737573d6000803e3d6000fd5b50506040517f1c92115f0000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f92506107a49150600290859060040161137a565b600060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146108365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b60035460ff166108885760405162461bcd60e51b815260206004820152601c60248201527f556e6c6f636b2066756e6374696f6e207761732064697361626c65640000000060448201526064016105a1565b6001546000828152600460208190526040918290205491516323b872dd60e01b815230918101919091526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b1580156108ef57600080fd5b505af1158015610903573d6000803e3d6000fd5b5050505050565b6000828260405161091c929190611245565b6040519081900381207f5f6970c300000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610993908b908b908b908b908b9089906004016112c7565b602060405180830381600087803b1580156109ad57600080fd5b505af11580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190610eb9565b610a0257604051631403112d60e21b815260040160405180910390fd5b6107d2565b6000546001600160a01b03163314610a615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610aea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b610af46000610d3d565b565b6000546001600160a01b03163314610b505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b8051610b63906002906020840190610d9a565b5050565b6000546001600160a01b03163314610bc15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b6003805460ff19169055565b6000546001600160a01b03163314610c275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b6001600160a01b038116610ca35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105a1565b610cac81610d3d565b50565b60028054610cbc90611482565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce890611482565b8015610d355780601f10610d0a57610100808354040283529160200191610d35565b820191906000526020600020905b815481529060010190602001808311610d1857829003601f168201915b505050505081565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610da690611482565b90600052602060002090601f016020900481019282610dc85760008555610e0e565b82601f10610de157805160ff1916838001178555610e0e565b82800160010185558215610e0e579182015b82811115610e0e578251825591602001919060010190610df3565b50610e1a929150610e1e565b5090565b5b80821115610e1a5760008155600101610e1f565b60008083601f840112610e44578182fd5b50813567ffffffffffffffff811115610e5b578182fd5b602083019150836020828501011115610e7357600080fd5b9250929050565b600060208284031215610e8b578081fd5b8135610e96816114d3565b9392505050565b600060208284031215610eae578081fd5b8151610e96816114d3565b600060208284031215610eca578081fd5b81518015158114610e96578182fd5b60008060008060008060006080888a031215610ef3578283fd5b87359650602088013567ffffffffffffffff80821115610f11578485fd5b610f1d8b838c01610e33565b909850965060408a0135915080821115610f35578485fd5b610f418b838c01610e33565b909650945060608a0135915080821115610f59578384fd5b50610f668a828b01610e33565b989b979a50959850939692959293505050565b60008060008060008060008060008060c08b8d031215610f97578283fd5b8a35995060208b013567ffffffffffffffff80821115610fb5578485fd5b610fc18e838f01610e33565b909b50995060408d0135915080821115610fd9578485fd5b610fe58e838f01610e33565b909950975060608d0135915080821115610ffd578485fd5b6110098e838f01610e33565b909750955060808d0135915080821115611021578485fd5b5061102e8d828e01610e33565b9150809450508092505060a08b013590509295989b9194979a5092959850565b60006020828403121561105f578081fd5b813567ffffffffffffffff811115611075578182fd5b8201601f81018413611085578182fd5b80356110986110938261142a565b6113f9565b8181528560208385010111156110ac578384fd5b81602084016020830137908101602001929092525092915050565b6000602082840312156110d8578081fd5b815167ffffffffffffffff8111156110ee578182fd5b8201601f810184136110fe578182fd5b805161110c6110938261142a565b818152856020838501011115611120578384fd5b611131826020830160208601611452565b95945050505050565b60006020828403121561114b578081fd5b5035919050565b6000815180845261116a816020860160208601611452565b601f01601f19169290920160200192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8054600090600181811c90808316806111c157607f831692505b60208084108214156111e157634e487b7160e01b86526022600452602486fd5b838852602088018280156111fc576001811461120d57611238565b60ff19871682528282019750611238565b60008981526020902060005b8781101561123257815484820152908601908401611219565b83019850505b5050505050505092915050565b8183823760009101908152919050565b60006001600160a01b03808716835260a0602084015261128c60a0840160078152662837b63cb3b7b760c91b602082015260400190565b838103604085015261129e81886111a7565b905083810360608501526112b28187611152565b92505080841660808401525095945050505050565b8681526080602082015260006112e160808301878961117e565b82810360408401526112f481868861117e565b915050826060830152979650505050505050565b89815260c06020820152600061132260c083018a8c61117e565b828103604084015261133581898b61117e565b9050866060840152828103608084015261135081868861117e565b9150508260a08301529a9950505050505050505050565b602081526000610e966020830184611152565b6060815260006113a16060830160078152662837b63cb3b7b760c91b602082015260400190565b82810360208401526113b381866111a7565b905082810360408401526111318185611152565b8381526060602082015260006113e06060830185611152565b90506001600160a01b0383166040830152949350505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611422576114226114bd565b604052919050565b600067ffffffffffffffff821115611444576114446114bd565b50601f01601f191660200190565b60005b8381101561146d578181015183820152602001611455565b8381111561147c576000848401525b50505050565b600181811c9082168061149657607f821691505b602082108114156114b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610cac57600080fdfea26469706673582212202ee384bde254f8ea1e813d13a426aaf88cb6439d9a2eea72125a938fa5a162db64736f6c63430008040033";

export class AxelarBridgeETH__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    gateway_: string,
    gasService_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AxelarBridgeETH> {
    return super.deploy(
      gateway_,
      gasService_,
      overrides || {}
    ) as Promise<AxelarBridgeETH>;
  }
  getDeployTransaction(
    gateway_: string,
    gasService_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, gasService_, overrides || {});
  }
  attach(address: string): AxelarBridgeETH {
    return super.attach(address) as AxelarBridgeETH;
  }
  connect(signer: Signer): AxelarBridgeETH__factory {
    return super.connect(signer) as AxelarBridgeETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AxelarBridgeETHInterface {
    return new utils.Interface(_abi) as AxelarBridgeETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AxelarBridgeETH {
    return new Contract(address, _abi, signerOrProvider) as AxelarBridgeETH;
  }
}
