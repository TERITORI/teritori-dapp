/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distributor, DistributorInterface } from "./Distributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "UpdateMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "reporter",
        type: "address",
      },
    ],
    name: "UpdateReporter",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proofs",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reporter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reporter",
        type: "address",
      },
    ],
    name: "updateReporter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userClaimedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610031565b600180546001600160a01b03191633179055610081565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610de6806100906000396000f3fe6080604052600436106100b55760003560e01c8063715018a6116100695780638da5cb5b1161004e5780638da5cb5b146101b9578063948b4ca4146101d7578063f2fde38b1461020f57600080fd5b8063715018a61461018457806378e3214f1461019957600080fd5b80633d13f8741161009a5780633d13f87414610122578063423d0f2e146101445780634783f0ef1461016457600080fd5b8063010ec441146100c15780632eb4a7ab146100fe57600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506001546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010a57600080fd5b5061011460025481565b6040519081526020016100f5565b34801561012e57600080fd5b5061014261013d366004610c30565b61022f565b005b34801561015057600080fd5b5061014261015f366004610bbb565b6103fa565b34801561017057600080fd5b5061014261017f366004610cd5565b6104ab565b34801561019057600080fd5b50610142610538565b3480156101a557600080fd5b506101426101b4366004610c07565b61059e565b3480156101c557600080fd5b506000546001600160a01b03166100e1565b3480156101e357600080fd5b506101146101f2366004610bd5565b600360209081526000928352604080842090915290825290205481565b34801561021b57600080fd5b5061014261022a366004610bbb565b610610565b604080513360208201526001600160a01b03861691810191909152606081018490526000906080016040516020818303038152906040528051906020012090506102b08383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060025491508490506106f2565b6103015760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b3360009081526003602090815260408083206001600160a01b038916845290915281205461032f9086610d3c565b9050600081116103815760405162461bcd60e51b815260206004820152600f60248201527f616c726561647920636c61696d6564000000000000000000000000000000000060448201526064016102f8565b3360008181526003602090815260408083206001600160a01b038b1680855292529091208790556103b2918361070a565b6040518581526001600160a01b0387169033907f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a3505050505050565b6000546001600160a01b031633146104545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f8565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f34657497f5ff25ea59cd441ce7294d87db6c261cb1b8b63d1a0834ab238b580f90600090a250565b6001546001600160a01b031633146105055760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964207265706f727465720000000000000000000000000000000060448201526064016102f8565b600281905560405181907fae8bdbc15b982b030d313524fca26f653a8826332c662cb93c670068172d217e90600090a250565b6000546001600160a01b031633146105925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f8565b61059c60006107da565b565b6000546001600160a01b031633146105f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f8565b61060c6001600160a01b038316338361070a565b5050565b6000546001600160a01b0316331461066a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f8565b6001600160a01b0381166106e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102f8565b6106ef816107da565b50565b6000826106ff8584610837565b1490505b9392505050565b6001600160a01b0383166107c1576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610765576040519150601f19603f3d011682016040523d82523d6000602084013e61076a565b606091505b50509050806107bb5760405162461bcd60e51b815260206004820152601c60248201527f4e41544956455f544f4b454e5f5452414e534645525f4641494c45440000000060448201526064016102f8565b50505050565b6107d56001600160a01b03841683836108b9565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156108b157600085828151811061086757634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161088d576000838152602082905260409020925061089e565b600081815260208490526040902092505b50806108a981610d7f565b91505061083c565b509392505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526107d592869291600091610977918516908490610a07565b8051909150156107d557808060200190518101906109959190610cb5565b6107d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102f8565b6060610a168484600085610a1e565b949350505050565b606082471015610a965760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102f8565b6001600160a01b0385163b610aed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102f8565b600080866001600160a01b03168587604051610b099190610ced565b60006040518083038185875af1925050503d8060008114610b46576040519150601f19603f3d011682016040523d82523d6000602084013e610b4b565b606091505b5091509150610b5b828286610b66565b979650505050505050565b60608315610b75575081610703565b825115610b855782518084602001fd5b8160405162461bcd60e51b81526004016102f89190610d09565b80356001600160a01b0381168114610bb657600080fd5b919050565b600060208284031215610bcc578081fd5b61070382610b9f565b60008060408385031215610be7578081fd5b610bf083610b9f565b9150610bfe60208401610b9f565b90509250929050565b60008060408385031215610c19578182fd5b610c2283610b9f565b946020939093013593505050565b60008060008060608587031215610c45578182fd5b610c4e85610b9f565b935060208501359250604085013567ffffffffffffffff80821115610c71578384fd5b818701915087601f830112610c84578384fd5b813581811115610c92578485fd5b8860208260051b8501011115610ca6578485fd5b95989497505060200194505050565b600060208284031215610cc6578081fd5b81518015158114610703578182fd5b600060208284031215610ce6578081fd5b5035919050565b60008251610cff818460208701610d53565b9190910192915050565b6020815260008251806020840152610d28816040850160208701610d53565b601f01601f19169190910160400192915050565b600082821015610d4e57610d4e610d9a565b500390565b60005b83811015610d6e578181015183820152602001610d56565b838111156107bb5750506000910152565b6000600019821415610d9357610d93610d9a565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200f06c35ffb1a765c9fa1c89c917b4169b11a178eb031cf8d21f34b2a6a3203b564736f6c63430008040033";

export class Distributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distributor> {
    return super.deploy(overrides || {}) as Promise<Distributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
