import * as jspb from 'google-protobuf'

import * as gogoproto_gogo_pb from '../gogoproto/gogo_pb'; // proto import: "gogoproto/gogo.proto"


export class ErrDetails extends jspb.Message {
  getCodesList(): Array<ErrCode>;
  setCodesList(value: Array<ErrCode>): ErrDetails;
  clearCodesList(): ErrDetails;
  addCodes(value: ErrCode, index?: number): ErrDetails;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ErrDetails.AsObject;
  static toObject(includeInstance: boolean, msg: ErrDetails): ErrDetails.AsObject;
  static serializeBinaryToWriter(message: ErrDetails, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ErrDetails;
  static deserializeBinaryFromReader(message: ErrDetails, reader: jspb.BinaryReader): ErrDetails;
}

export namespace ErrDetails {
  export type AsObject = {
    codesList: Array<ErrCode>,
  }
}

export enum ErrCode { 
  UNDEFINED = 0,
  TODO = 666,
  ERRNOTIMPLEMENTED = 777,
  ERRINTERNAL = 888,
  ERRINVALIDINPUT = 100,
  ERRINVALIDRANGE = 101,
  ERRMISSINGINPUT = 102,
  ERRSERIALIZATION = 103,
  ERRDESERIALIZATION = 104,
  ERRSTREAMREAD = 105,
  ERRSTREAMWRITE = 106,
  ERRSTREAMTRANSFORM = 110,
  ERRSTREAMSENDANDCLOSE = 111,
  ERRSTREAMHEADERWRITE = 112,
  ERRSTREAMHEADERREAD = 115,
  ERRSTREAMSINK = 113,
  ERRSTREAMCLOSEANDRECV = 114,
  ERRMISSINGMAPKEY = 107,
  ERRDBWRITE = 108,
  ERRDBREAD = 109,
  ERRDBDESTROY = 120,
  ERRDBMIGRATE = 121,
  ERRDBREPLAY = 122,
  ERRDBRESTORE = 123,
  ERRDBOPEN = 124,
  ERRDBCLOSE = 125,
  ERRCRYPTORANDOMGENERATION = 200,
  ERRCRYPTOKEYGENERATION = 201,
  ERRCRYPTONONCEGENERATION = 202,
  ERRCRYPTOSIGNATURE = 203,
  ERRCRYPTOSIGNATUREVERIFICATION = 204,
  ERRCRYPTODECRYPT = 205,
  ERRCRYPTODECRYPTPAYLOAD = 206,
  ERRCRYPTOENCRYPT = 207,
  ERRCRYPTOKEYCONVERSION = 208,
  ERRCRYPTOCIPHERINIT = 209,
  ERRCRYPTOKEYDERIVATION = 210,
  ERRMAP = 300,
  ERRFOREACH = 301,
  ERRKEYSTOREGET = 400,
  ERRKEYSTOREPUT = 401,
  ERRNOTFOUND = 404,
  ERRORBITDBINIT = 1000,
  ERRORBITDBOPEN = 1001,
  ERRORBITDBAPPEND = 1002,
  ERRORBITDBDESERIALIZATION = 1003,
  ERRORBITDBSTORECAST = 1004,
  ERRHANDSHAKEOWNEPHEMERALKEYGENSEND = 1100,
  ERRHANDSHAKEPEEREPHEMERALKEYRECV = 1101,
  ERRHANDSHAKEREQUESTERAUTHENTICATEBOXKEYGEN = 1102,
  ERRHANDSHAKERESPONDERACCEPTBOXKEYGEN = 1103,
  ERRHANDSHAKEREQUESTERHELLO = 1104,
  ERRHANDSHAKERESPONDERHELLO = 1105,
  ERRHANDSHAKEREQUESTERAUTHENTICATE = 1106,
  ERRHANDSHAKERESPONDERACCEPT = 1107,
  ERRHANDSHAKEREQUESTERACKNOWLEDGE = 1108,
  ERRCONTACTREQUESTSAMEACCOUNT = 1200,
  ERRCONTACTREQUESTCONTACTALREADYADDED = 1201,
  ERRCONTACTREQUESTCONTACTBLOCKED = 1202,
  ERRCONTACTREQUESTCONTACTUNDEFINED = 1203,
  ERRCONTACTREQUESTINCOMINGALREADYRECEIVED = 1204,
  ERRGROUPMEMBERLOGEVENTOPEN = 1300,
  ERRGROUPMEMBERLOGEVENTSIGNATURE = 1301,
  ERRGROUPMEMBERUNKNOWNGROUPID = 1302,
  ERRGROUPSECRETOTHERDESTMEMBER = 1303,
  ERRGROUPSECRETALREADYSENTTOMEMBER = 1304,
  ERRGROUPINVALIDTYPE = 1305,
  ERRGROUPMISSING = 1306,
  ERRGROUPACTIVATE = 1307,
  ERRGROUPDEACTIVATE = 1308,
  ERRGROUPINFO = 1309,
  ERRGROUPUNKNOWN = 1310,
  ERRGROUPOPEN = 1311,
  ERRMESSAGEKEYPERSISTENCEPUT = 1500,
  ERRMESSAGEKEYPERSISTENCEGET = 1501,
  ERRSERVICEREPLICATION = 4100,
  ERRSERVICEREPLICATIONSERVER = 4101,
  ERRSERVICEREPLICATIONMISSINGENDPOINT = 4102,
  ERRSERVICESDIRECTORY = 4200,
  ERRSERVICESDIRECTORYINVALIDVERIFIEDCREDENTIALSUBJECT = 4201,
  ERRSERVICESDIRECTORYEXISTINGRECORDNOTFOUND = 4202,
  ERRSERVICESDIRECTORYRECORDLOCKEDANDCANTBEREPLACED = 4203,
  ERRSERVICESDIRECTORYEXPLICITREPLACEFLAGREQUIRED = 4204,
  ERRSERVICESDIRECTORYINVALIDVERIFIEDCREDENTIAL = 4205,
  ERRSERVICESDIRECTORYEXPIREDVERIFIEDCREDENTIAL = 4206,
  ERRSERVICESDIRECTORYINVALIDVERIFIEDCREDENTIALID = 4207,
}
