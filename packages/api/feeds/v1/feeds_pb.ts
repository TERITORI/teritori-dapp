// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,json_types=true"
// @generated from file feeds/v1/feeds.proto (package feeds.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "../../libs/protobuf-codegenv2.ts";
import { fileDesc, messageDesc } from "../../libs/protobuf-codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file feeds/v1/feeds.proto.
 */
export const file_feeds_v1_feeds: GenFile = /*@__PURE__*/
  fileDesc("ChRmZWVkcy92MS9mZWVkcy5wcm90bxIIZmVlZHMudjEiJgoKUG9zdEdlb0xvYxILCgNsYXQYAiABKAISCwoDbG5nGAMgASgCIh8KDFN0YW5kYXJkUG9zdBIPCgdjb250ZW50GAEgASgJIl4KC0FydGljbGVQb3N0Eg0KBXRpdGxlGAEgASgJEhQKDHByZXZpZXdfdGV4dBgCIAEoCRIZChFwcmV2aWV3X2ltYWdlX3VyaRgDIAEoCRIPCgdjb250ZW50GAQgASgJIhcKCExpbmtQb3N0EgsKA3VyaRgBIAEoCSJCCglJbWFnZVBvc3QSDQoFdGl0bGUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSEQoJaW1hZ2VfdXJpGAMgASgJIlUKCUF1ZGlvUG9zdBINCgV0aXRsZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIRCglhdWRpb191cmkYAyABKAkSEQoJaW1hZ2VfdXJpGAQgASgJIl8KCVZpZGVvUG9zdBINCgV0aXRsZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIRCgl2aWRlb191cmkYAyABKAkSGwoTdGh1bWJuYWlsX2ltYWdlX3VyaRgEIAEoCSI7CghSZWFjdGlvbhIQCghwb3N0X3VyaRgBIAEoCRIMCgRpY29uGAIgASgJEg8KB3VzZXJfaWQYAyABKAkiOwoDVGlwEhUKDXBvc3RfbG9jYWxfaWQYASABKAkSDQoFZGVub20YAyABKAkSDgoGYW1vdW50GAQgASgDIqIDCgRQb3N0EhUKDWxvY2FsX3Bvc3RfaWQYASABKAQSDgoGYXV0aG9yGAIgASgJEhIKCnBhcmVudF91cmkYAyABKAkSIQoDbG9jGAQgASgLMhQuZmVlZHMudjEuUG9zdEdlb0xvYxISCgpjcmVhdGVkX2F0GAUgASgDEhIKCnVwZGF0ZWRfYXQYBiABKAMSEgoKZGVsZXRlZF9hdBgHIAEoAxIMCgR0YWdzGAggAygJEioKCHN0YW5kYXJkGAkgASgLMhYuZmVlZHMudjEuU3RhbmRhcmRQb3N0SAASKAoHYXJ0aWNsZRgKIAEoCzIVLmZlZWRzLnYxLkFydGljbGVQb3N0SAASIgoEbGluaxgLIAEoCzISLmZlZWRzLnYxLkxpbmtQb3N0SAASJAoFaW1hZ2UYDCABKAsyEy5mZWVkcy52MS5JbWFnZVBvc3RIABIkCgV2aWRlbxgNIAEoCzITLmZlZWRzLnYxLlZpZGVvUG9zdEgAEiQKBWF1ZGlvGA4gASgLMhMuZmVlZHMudjEuQXVkaW9Qb3N0SABCBgoEcG9zdCJrCghQb3N0VmlldxIcCgRwb3N0GAEgASgLMg4uZmVlZHMudjEuUG9zdBIWCg5jaGlsZHJlbl9jb3VudBgCIAEoBBIpCglyZWFjdGlvbnMYAyADKAsyFi5mZWVkcy52MS5SZWFjdGlvblZpZXciQwoMUmVhY3Rpb25WaWV3EgwKBGljb24YASABKAkSDQoFY291bnQYAiABKA0SFgoOdXNlcl9oYXNfdm90ZWQYAyABKAhCOVo3Z2l0aHViLmNvbS9zYW1vdXJhaXdvcmxkL3plbmFvL2JhY2tlbmQvZmVlZHMvdjE7ZmVlZHN2MWIGcHJvdG8z");

/**
 * @generated from message feeds.v1.PostGeoLoc
 */
export type PostGeoLoc = Message<"feeds.v1.PostGeoLoc"> & {
  /**
   * @generated from field: float lat = 2;
   */
  lat: number;

  /**
   * @generated from field: float lng = 3;
   */
  lng: number;
};

/**
 * @generated from message feeds.v1.PostGeoLoc
 */
export type PostGeoLocJson = {
  /**
   * @generated from field: float lat = 2;
   */
  lat?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * @generated from field: float lng = 3;
   */
  lng?: number | "NaN" | "Infinity" | "-Infinity";
};

/**
 * Describes the message feeds.v1.PostGeoLoc.
 * Use `create(PostGeoLocSchema)` to create a new message.
 */
export const PostGeoLocSchema: GenMessage<PostGeoLoc, {jsonType: PostGeoLocJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 0);

/**
 * @generated from message feeds.v1.StandardPost
 */
export type StandardPost = Message<"feeds.v1.StandardPost"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * @generated from message feeds.v1.StandardPost
 */
export type StandardPostJson = {
  /**
   * @generated from field: string content = 1;
   */
  content?: string;
};

/**
 * Describes the message feeds.v1.StandardPost.
 * Use `create(StandardPostSchema)` to create a new message.
 */
export const StandardPostSchema: GenMessage<StandardPost, {jsonType: StandardPostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 1);

/**
 * @generated from message feeds.v1.ArticlePost
 */
export type ArticlePost = Message<"feeds.v1.ArticlePost"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string preview_text = 2;
   */
  previewText: string;

  /**
   * @generated from field: string preview_image_uri = 3;
   */
  previewImageUri: string;

  /**
   * @generated from field: string content = 4;
   */
  content: string;
};

/**
 * @generated from message feeds.v1.ArticlePost
 */
export type ArticlePostJson = {
  /**
   * @generated from field: string title = 1;
   */
  title?: string;

  /**
   * @generated from field: string preview_text = 2;
   */
  previewText?: string;

  /**
   * @generated from field: string preview_image_uri = 3;
   */
  previewImageUri?: string;

  /**
   * @generated from field: string content = 4;
   */
  content?: string;
};

/**
 * Describes the message feeds.v1.ArticlePost.
 * Use `create(ArticlePostSchema)` to create a new message.
 */
export const ArticlePostSchema: GenMessage<ArticlePost, {jsonType: ArticlePostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 2);

/**
 * @generated from message feeds.v1.LinkPost
 */
export type LinkPost = Message<"feeds.v1.LinkPost"> & {
  /**
   * @generated from field: string uri = 1;
   */
  uri: string;
};

/**
 * @generated from message feeds.v1.LinkPost
 */
export type LinkPostJson = {
  /**
   * @generated from field: string uri = 1;
   */
  uri?: string;
};

/**
 * Describes the message feeds.v1.LinkPost.
 * Use `create(LinkPostSchema)` to create a new message.
 */
export const LinkPostSchema: GenMessage<LinkPost, {jsonType: LinkPostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 3);

/**
 * @generated from message feeds.v1.ImagePost
 */
export type ImagePost = Message<"feeds.v1.ImagePost"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string image_uri = 3;
   */
  imageUri: string;
};

/**
 * @generated from message feeds.v1.ImagePost
 */
export type ImagePostJson = {
  /**
   * @generated from field: string title = 1;
   */
  title?: string;

  /**
   * @generated from field: string description = 2;
   */
  description?: string;

  /**
   * @generated from field: string image_uri = 3;
   */
  imageUri?: string;
};

/**
 * Describes the message feeds.v1.ImagePost.
 * Use `create(ImagePostSchema)` to create a new message.
 */
export const ImagePostSchema: GenMessage<ImagePost, {jsonType: ImagePostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 4);

/**
 * @generated from message feeds.v1.AudioPost
 */
export type AudioPost = Message<"feeds.v1.AudioPost"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string audio_uri = 3;
   */
  audioUri: string;

  /**
   * @generated from field: string image_uri = 4;
   */
  imageUri: string;
};

/**
 * @generated from message feeds.v1.AudioPost
 */
export type AudioPostJson = {
  /**
   * @generated from field: string title = 1;
   */
  title?: string;

  /**
   * @generated from field: string description = 2;
   */
  description?: string;

  /**
   * @generated from field: string audio_uri = 3;
   */
  audioUri?: string;

  /**
   * @generated from field: string image_uri = 4;
   */
  imageUri?: string;
};

/**
 * Describes the message feeds.v1.AudioPost.
 * Use `create(AudioPostSchema)` to create a new message.
 */
export const AudioPostSchema: GenMessage<AudioPost, {jsonType: AudioPostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 5);

/**
 * @generated from message feeds.v1.VideoPost
 */
export type VideoPost = Message<"feeds.v1.VideoPost"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string video_uri = 3;
   */
  videoUri: string;

  /**
   * @generated from field: string thumbnail_image_uri = 4;
   */
  thumbnailImageUri: string;
};

/**
 * @generated from message feeds.v1.VideoPost
 */
export type VideoPostJson = {
  /**
   * @generated from field: string title = 1;
   */
  title?: string;

  /**
   * @generated from field: string description = 2;
   */
  description?: string;

  /**
   * @generated from field: string video_uri = 3;
   */
  videoUri?: string;

  /**
   * @generated from field: string thumbnail_image_uri = 4;
   */
  thumbnailImageUri?: string;
};

/**
 * Describes the message feeds.v1.VideoPost.
 * Use `create(VideoPostSchema)` to create a new message.
 */
export const VideoPostSchema: GenMessage<VideoPost, {jsonType: VideoPostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 6);

/**
 * XXX: not used yet in contracts
 *
 * @generated from message feeds.v1.Reaction
 */
export type Reaction = Message<"feeds.v1.Reaction"> & {
  /**
   * @generated from field: string post_uri = 1;
   */
  postUri: string;

  /**
   * @generated from field: string icon = 2;
   */
  icon: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId: string;
};

/**
 * XXX: not used yet in contracts
 *
 * @generated from message feeds.v1.Reaction
 */
export type ReactionJson = {
  /**
   * @generated from field: string post_uri = 1;
   */
  postUri?: string;

  /**
   * @generated from field: string icon = 2;
   */
  icon?: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId?: string;
};

/**
 * Describes the message feeds.v1.Reaction.
 * Use `create(ReactionSchema)` to create a new message.
 */
export const ReactionSchema: GenMessage<Reaction, {jsonType: ReactionJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 7);

/**
 * Only on local chaine from the related post
 *
 * @generated from message feeds.v1.Tip
 */
export type Tip = Message<"feeds.v1.Tip"> & {
  /**
   * @generated from field: string post_local_id = 1;
   */
  postLocalId: string;

  /**
   * @generated from field: string denom = 3;
   */
  denom: string;

  /**
   * XXX: use string encoding?
   *
   * @generated from field: int64 amount = 4;
   */
  amount: bigint;
};

/**
 * Only on local chaine from the related post
 *
 * @generated from message feeds.v1.Tip
 */
export type TipJson = {
  /**
   * @generated from field: string post_local_id = 1;
   */
  postLocalId?: string;

  /**
   * @generated from field: string denom = 3;
   */
  denom?: string;

  /**
   * XXX: use string encoding?
   *
   * @generated from field: int64 amount = 4;
   */
  amount?: string;
};

/**
 * Describes the message feeds.v1.Tip.
 * Use `create(TipSchema)` to create a new message.
 */
export const TipSchema: GenMessage<Tip, {jsonType: TipJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 8);

/**
 * @generated from message feeds.v1.Post
 */
export type Post = Message<"feeds.v1.Post"> & {
  /**
   * @generated from field: uint64 local_post_id = 1;
   */
  localPostId: bigint;

  /**
   * @generated from field: string author = 2;
   */
  author: string;

  /**
   * @generated from field: string parent_uri = 3;
   */
  parentUri: string;

  /**
   * XXX: map any extentions = 10;
   *
   * @generated from field: feeds.v1.PostGeoLoc loc = 4;
   */
  loc?: PostGeoLoc;

  /**
   * @generated from field: int64 created_at = 5;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 6;
   */
  updatedAt: bigint;

  /**
   * if != 0 -> deleted
   *
   * @generated from field: int64 deleted_at = 7;
   */
  deletedAt: bigint;

  /**
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * @generated from oneof feeds.v1.Post.post
   */
  post: {
    /**
     * @generated from field: feeds.v1.StandardPost standard = 9;
     */
    value: StandardPost;
    case: "standard";
  } | {
    /**
     * @generated from field: feeds.v1.ArticlePost article = 10;
     */
    value: ArticlePost;
    case: "article";
  } | {
    /**
     * @generated from field: feeds.v1.LinkPost link = 11;
     */
    value: LinkPost;
    case: "link";
  } | {
    /**
     * @generated from field: feeds.v1.ImagePost image = 12;
     */
    value: ImagePost;
    case: "image";
  } | {
    /**
     * @generated from field: feeds.v1.VideoPost video = 13;
     */
    value: VideoPost;
    case: "video";
  } | {
    /**
     * @generated from field: feeds.v1.AudioPost audio = 14;
     */
    value: AudioPost;
    case: "audio";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message feeds.v1.Post
 */
export type PostJson = {
  /**
   * @generated from field: uint64 local_post_id = 1;
   */
  localPostId?: string;

  /**
   * @generated from field: string author = 2;
   */
  author?: string;

  /**
   * @generated from field: string parent_uri = 3;
   */
  parentUri?: string;

  /**
   * XXX: map any extentions = 10;
   *
   * @generated from field: feeds.v1.PostGeoLoc loc = 4;
   */
  loc?: PostGeoLocJson;

  /**
   * @generated from field: int64 created_at = 5;
   */
  createdAt?: string;

  /**
   * @generated from field: int64 updated_at = 6;
   */
  updatedAt?: string;

  /**
   * if != 0 -> deleted
   *
   * @generated from field: int64 deleted_at = 7;
   */
  deletedAt?: string;

  /**
   * @generated from field: repeated string tags = 8;
   */
  tags?: string[];

  /**
   * @generated from field: feeds.v1.StandardPost standard = 9;
   */
  standard?: StandardPostJson;

  /**
   * @generated from field: feeds.v1.ArticlePost article = 10;
   */
  article?: ArticlePostJson;

  /**
   * @generated from field: feeds.v1.LinkPost link = 11;
   */
  link?: LinkPostJson;

  /**
   * @generated from field: feeds.v1.ImagePost image = 12;
   */
  image?: ImagePostJson;

  /**
   * @generated from field: feeds.v1.VideoPost video = 13;
   */
  video?: VideoPostJson;

  /**
   * @generated from field: feeds.v1.AudioPost audio = 14;
   */
  audio?: AudioPostJson;
};

/**
 * Describes the message feeds.v1.Post.
 * Use `create(PostSchema)` to create a new message.
 */
export const PostSchema: GenMessage<Post, {jsonType: PostJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 9);

/**
 * @generated from message feeds.v1.PostView
 */
export type PostView = Message<"feeds.v1.PostView"> & {
  /**
   * @generated from field: feeds.v1.Post post = 1;
   */
  post?: Post;

  /**
   * @generated from field: uint64 children_count = 2;
   */
  childrenCount: bigint;

  /**
   * @generated from field: repeated feeds.v1.ReactionView reactions = 3;
   */
  reactions: ReactionView[];
};

/**
 * @generated from message feeds.v1.PostView
 */
export type PostViewJson = {
  /**
   * @generated from field: feeds.v1.Post post = 1;
   */
  post?: PostJson;

  /**
   * @generated from field: uint64 children_count = 2;
   */
  childrenCount?: string;

  /**
   * @generated from field: repeated feeds.v1.ReactionView reactions = 3;
   */
  reactions?: ReactionViewJson[];
};

/**
 * Describes the message feeds.v1.PostView.
 * Use `create(PostViewSchema)` to create a new message.
 */
export const PostViewSchema: GenMessage<PostView, {jsonType: PostViewJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 10);

/**
 * @generated from message feeds.v1.ReactionView
 */
export type ReactionView = Message<"feeds.v1.ReactionView"> & {
  /**
   * @generated from field: string icon = 1;
   */
  icon: string;

  /**
   * @generated from field: uint32 count = 2;
   */
  count: number;

  /**
   * @generated from field: bool user_has_voted = 3;
   */
  userHasVoted: boolean;
};

/**
 * @generated from message feeds.v1.ReactionView
 */
export type ReactionViewJson = {
  /**
   * @generated from field: string icon = 1;
   */
  icon?: string;

  /**
   * @generated from field: uint32 count = 2;
   */
  count?: number;

  /**
   * @generated from field: bool user_has_voted = 3;
   */
  userHasVoted?: boolean;
};

/**
 * Describes the message feeds.v1.ReactionView.
 * Use `create(ReactionViewSchema)` to create a new message.
 */
export const ReactionViewSchema: GenMessage<ReactionView, {jsonType: ReactionViewJson}> = /*@__PURE__*/
  messageDesc(file_feeds_v1_feeds, 11);

