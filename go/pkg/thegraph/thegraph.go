// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package thegraph

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// Activities includes the requested fields of the GraphQL type Action.
type Activities struct {
	Id        string         `json:"id"`
	Nft       ActivitiesNft  `json:"nft"`
	Buy       ActivitiesBuy  `json:"buy"`
	List      ActivitiesList `json:"list"`
	Action    string         `json:"action"`
	Actor     string         `json:"actor"`
	Receiver  string         `json:"receiver"`
	TxID      string         `json:"txID"`
	CreatedAt string         `json:"createdAt"`
}

// GetId returns Activities.Id, and is useful for accessing the field via an interface.
func (v *Activities) GetId() string { return v.Id }

// GetNft returns Activities.Nft, and is useful for accessing the field via an interface.
func (v *Activities) GetNft() ActivitiesNft { return v.Nft }

// GetBuy returns Activities.Buy, and is useful for accessing the field via an interface.
func (v *Activities) GetBuy() ActivitiesBuy { return v.Buy }

// GetList returns Activities.List, and is useful for accessing the field via an interface.
func (v *Activities) GetList() ActivitiesList { return v.List }

// GetAction returns Activities.Action, and is useful for accessing the field via an interface.
func (v *Activities) GetAction() string { return v.Action }

// GetActor returns Activities.Actor, and is useful for accessing the field via an interface.
func (v *Activities) GetActor() string { return v.Actor }

// GetReceiver returns Activities.Receiver, and is useful for accessing the field via an interface.
func (v *Activities) GetReceiver() string { return v.Receiver }

// GetTxID returns Activities.TxID, and is useful for accessing the field via an interface.
func (v *Activities) GetTxID() string { return v.TxID }

// GetCreatedAt returns Activities.CreatedAt, and is useful for accessing the field via an interface.
func (v *Activities) GetCreatedAt() string { return v.CreatedAt }

// ActivitiesBuy includes the requested fields of the GraphQL type Buy.
type ActivitiesBuy struct {
	Price  string `json:"price"`
	Denom  string `json:"denom"`
	Seller string `json:"seller"`
}

// GetPrice returns ActivitiesBuy.Price, and is useful for accessing the field via an interface.
func (v *ActivitiesBuy) GetPrice() string { return v.Price }

// GetDenom returns ActivitiesBuy.Denom, and is useful for accessing the field via an interface.
func (v *ActivitiesBuy) GetDenom() string { return v.Denom }

// GetSeller returns ActivitiesBuy.Seller, and is useful for accessing the field via an interface.
func (v *ActivitiesBuy) GetSeller() string { return v.Seller }

// ActivitiesList includes the requested fields of the GraphQL type List.
type ActivitiesList struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns ActivitiesList.Price, and is useful for accessing the field via an interface.
func (v *ActivitiesList) GetPrice() string { return v.Price }

// GetDenom returns ActivitiesList.Denom, and is useful for accessing the field via an interface.
func (v *ActivitiesList) GetDenom() string { return v.Denom }

// ActivitiesNft includes the requested fields of the GraphQL type Nft.
type ActivitiesNft struct {
	Id       string                `json:"id"`
	TokenURI string                `json:"tokenURI"`
	Contract ActivitiesNftContract `json:"contract"`
}

// GetId returns ActivitiesNft.Id, and is useful for accessing the field via an interface.
func (v *ActivitiesNft) GetId() string { return v.Id }

// GetTokenURI returns ActivitiesNft.TokenURI, and is useful for accessing the field via an interface.
func (v *ActivitiesNft) GetTokenURI() string { return v.TokenURI }

// GetContract returns ActivitiesNft.Contract, and is useful for accessing the field via an interface.
func (v *ActivitiesNft) GetContract() ActivitiesNftContract { return v.Contract }

// ActivitiesNftContract includes the requested fields of the GraphQL type NftContract.
type ActivitiesNftContract struct {
	Minter string `json:"minter"`
	Id     string `json:"id"`
	Name   string `json:"name"`
}

// GetMinter returns ActivitiesNftContract.Minter, and is useful for accessing the field via an interface.
func (v *ActivitiesNftContract) GetMinter() string { return v.Minter }

// GetId returns ActivitiesNftContract.Id, and is useful for accessing the field via an interface.
func (v *ActivitiesNftContract) GetId() string { return v.Id }

// GetName returns ActivitiesNftContract.Name, and is useful for accessing the field via an interface.
func (v *ActivitiesNftContract) GetName() string { return v.Name }

type BlockChangedFilter struct {
	Number_gte int `json:"number_gte"`
}

// GetNumber_gte returns BlockChangedFilter.Number_gte, and is useful for accessing the field via an interface.
func (v *BlockChangedFilter) GetNumber_gte() int { return v.Number_gte }

// GetCollectionActivitiesResponse is returned by GetCollectionActivities on success.
type GetCollectionActivitiesResponse struct {
	Actions []Activities `json:"actions"`
}

// GetActions returns GetCollectionActivitiesResponse.Actions, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesResponse) GetActions() []Activities { return v.Actions }

// GetCollectionNFTsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionNFTsNftContractsNftContract struct {
	Id     string                                            `json:"id"`
	Name   string                                            `json:"name"`
	Minter string                                            `json:"minter"`
	Symbol string                                            `json:"symbol"`
	Nfts   []GetCollectionNFTsNftContractsNftContractNftsNft `json:"nfts"`
}

// GetId returns GetCollectionNFTsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetId() string { return v.Id }

// GetName returns GetCollectionNFTsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetName() string { return v.Name }

// GetMinter returns GetCollectionNFTsNftContractsNftContract.Minter, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetMinter() string { return v.Minter }

// GetSymbol returns GetCollectionNFTsNftContractsNftContract.Symbol, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetSymbol() string { return v.Symbol }

// GetNfts returns GetCollectionNFTsNftContractsNftContract.Nfts, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetNfts() []GetCollectionNFTsNftContractsNftContractNftsNft {
	return v.Nfts
}

// GetCollectionNFTsNftContractsNftContractNftsNft includes the requested fields of the GraphQL type Nft.
type GetCollectionNFTsNftContractsNftContractNftsNft struct {
	Id             string `json:"id"`
	TokenID        string `json:"tokenID"`
	Owner          string `json:"owner"`
	Seller         string `json:"seller"`
	CreatorName    string `json:"creatorName"`
	CreatorAddress string `json:"creatorAddress"`
	TokenURI       string `json:"tokenURI"`
	InSale         bool   `json:"inSale"`
	Price          string `json:"price"`
	Denom          string `json:"denom"`
	CreatedAt      string `json:"createdAt"`
	RemovedAt      string `json:"removedAt"`
}

// GetId returns GetCollectionNFTsNftContractsNftContractNftsNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetId() string { return v.Id }

// GetTokenID returns GetCollectionNFTsNftContractsNftContractNftsNft.TokenID, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetTokenID() string { return v.TokenID }

// GetOwner returns GetCollectionNFTsNftContractsNftContractNftsNft.Owner, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetOwner() string { return v.Owner }

// GetSeller returns GetCollectionNFTsNftContractsNftContractNftsNft.Seller, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetSeller() string { return v.Seller }

// GetCreatorName returns GetCollectionNFTsNftContractsNftContractNftsNft.CreatorName, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetCreatorName() string {
	return v.CreatorName
}

// GetCreatorAddress returns GetCollectionNFTsNftContractsNftContractNftsNft.CreatorAddress, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetCreatorAddress() string {
	return v.CreatorAddress
}

// GetTokenURI returns GetCollectionNFTsNftContractsNftContractNftsNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetTokenURI() string { return v.TokenURI }

// GetInSale returns GetCollectionNFTsNftContractsNftContractNftsNft.InSale, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetInSale() bool { return v.InSale }

// GetPrice returns GetCollectionNFTsNftContractsNftContractNftsNft.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionNFTsNftContractsNftContractNftsNft.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetCollectionNFTsNftContractsNftContractNftsNft.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetCreatedAt() string { return v.CreatedAt }

// GetRemovedAt returns GetCollectionNFTsNftContractsNftContractNftsNft.RemovedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetRemovedAt() string { return v.RemovedAt }

// GetCollectionNFTsResponse is returned by GetCollectionNFTs on success.
type GetCollectionNFTsResponse struct {
	NftContracts []GetCollectionNFTsNftContractsNftContract `json:"nftContracts"`
}

// GetNftContracts returns GetCollectionNFTsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsResponse) GetNftContracts() []GetCollectionNFTsNftContractsNftContract {
	return v.NftContracts
}

// GetCollectionStatsBuysBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionStatsBuysBuy struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns GetCollectionStatsBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsBuysBuy) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionStatsBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsBuysBuy) GetDenom() string { return v.Denom }

// GetCollectionStatsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionStatsNftContractsNftContract struct {
	Id     string                                             `json:"id"`
	Name   string                                             `json:"name"`
	Symbol string                                             `json:"symbol"`
	Nfts   []GetCollectionStatsNftContractsNftContractNftsNft `json:"nfts"`
}

// GetId returns GetCollectionStatsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetId() string { return v.Id }

// GetName returns GetCollectionStatsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetName() string { return v.Name }

// GetSymbol returns GetCollectionStatsNftContractsNftContract.Symbol, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetSymbol() string { return v.Symbol }

// GetNfts returns GetCollectionStatsNftContractsNftContract.Nfts, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetNfts() []GetCollectionStatsNftContractsNftContractNftsNft {
	return v.Nfts
}

// GetCollectionStatsNftContractsNftContractNftsNft includes the requested fields of the GraphQL type Nft.
type GetCollectionStatsNftContractsNftContractNftsNft struct {
	Id             string `json:"id"`
	Owner          string `json:"owner"`
	CreatorName    string `json:"creatorName"`
	CreatorAddress string `json:"creatorAddress"`
	TokenURI       string `json:"tokenURI"`
	InSale         bool   `json:"inSale"`
	Price          string `json:"price"`
	Denom          string `json:"denom"`
	CreatedAt      string `json:"createdAt"`
}

// GetId returns GetCollectionStatsNftContractsNftContractNftsNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetId() string { return v.Id }

// GetOwner returns GetCollectionStatsNftContractsNftContractNftsNft.Owner, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetOwner() string { return v.Owner }

// GetCreatorName returns GetCollectionStatsNftContractsNftContractNftsNft.CreatorName, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetCreatorName() string {
	return v.CreatorName
}

// GetCreatorAddress returns GetCollectionStatsNftContractsNftContractNftsNft.CreatorAddress, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetCreatorAddress() string {
	return v.CreatorAddress
}

// GetTokenURI returns GetCollectionStatsNftContractsNftContractNftsNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetTokenURI() string { return v.TokenURI }

// GetInSale returns GetCollectionStatsNftContractsNftContractNftsNft.InSale, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetInSale() bool { return v.InSale }

// GetPrice returns GetCollectionStatsNftContractsNftContractNftsNft.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionStatsNftContractsNftContractNftsNft.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetCollectionStatsNftContractsNftContractNftsNft.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetCreatedAt() string { return v.CreatedAt }

// GetCollectionStatsResponse is returned by GetCollectionStats on success.
type GetCollectionStatsResponse struct {
	NftContracts []GetCollectionStatsNftContractsNftContract `json:"nftContracts"`
	Buys         []GetCollectionStatsBuysBuy                 `json:"buys"`
}

// GetNftContracts returns GetCollectionStatsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsResponse) GetNftContracts() []GetCollectionStatsNftContractsNftContract {
	return v.NftContracts
}

// GetBuys returns GetCollectionStatsResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsResponse) GetBuys() []GetCollectionStatsBuysBuy { return v.Buys }

// GetCollectionsBuysBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionsBuysBuy struct {
	Id    string                   `json:"id"`
	Nft   GetCollectionsBuysBuyNft `json:"nft"`
	Denom string                   `json:"denom"`
	Price string                   `json:"price"`
}

// GetId returns GetCollectionsBuysBuy.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetId() string { return v.Id }

// GetNft returns GetCollectionsBuysBuy.Nft, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetNft() GetCollectionsBuysBuyNft { return v.Nft }

// GetDenom returns GetCollectionsBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetDenom() string { return v.Denom }

// GetPrice returns GetCollectionsBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetPrice() string { return v.Price }

// GetCollectionsBuysBuyNft includes the requested fields of the GraphQL type Nft.
type GetCollectionsBuysBuyNft struct {
	Id       string                           `json:"id"`
	Contract GetCollectionsBuysBuyNftContract `json:"contract"`
}

// GetId returns GetCollectionsBuysBuyNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNft) GetId() string { return v.Id }

// GetContract returns GetCollectionsBuysBuyNft.Contract, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNft) GetContract() GetCollectionsBuysBuyNftContract { return v.Contract }

// GetCollectionsBuysBuyNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionsBuysBuyNftContract struct {
	Id string `json:"id"`
}

// GetId returns GetCollectionsBuysBuyNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNftContract) GetId() string { return v.Id }

// GetCollectionsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionsNftContractsNftContract struct {
	Id        string `json:"id"`
	Supported bool   `json:"supported"`
	Name      string `json:"name"`
	Minter    string `json:"minter"`
}

// GetId returns GetCollectionsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetId() string { return v.Id }

// GetSupported returns GetCollectionsNftContractsNftContract.Supported, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetSupported() bool { return v.Supported }

// GetName returns GetCollectionsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetName() string { return v.Name }

// GetMinter returns GetCollectionsNftContractsNftContract.Minter, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetMinter() string { return v.Minter }

// GetCollectionsResponse is returned by GetCollections on success.
type GetCollectionsResponse struct {
	NftContracts []GetCollectionsNftContractsNftContract `json:"nftContracts"`
	Buys         []GetCollectionsBuysBuy                 `json:"buys"`
}

// GetNftContracts returns GetCollectionsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionsResponse) GetNftContracts() []GetCollectionsNftContractsNftContract {
	return v.NftContracts
}

// GetBuys returns GetCollectionsResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetCollectionsResponse) GetBuys() []GetCollectionsBuysBuy { return v.Buys }

// GetNFTActivitiesResponse is returned by GetNFTActivities on success.
type GetNFTActivitiesResponse struct {
	Actions []Activities `json:"actions"`
}

// GetActions returns GetNFTActivitiesResponse.Actions, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesResponse) GetActions() []Activities { return v.Actions }

// GetNFTPriceHistoryBuysBuy includes the requested fields of the GraphQL type Buy.
type GetNFTPriceHistoryBuysBuy struct {
	Price     string `json:"price"`
	Denom     string `json:"denom"`
	CreatedAt string `json:"createdAt"`
}

// GetPrice returns GetNFTPriceHistoryBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetPrice() string { return v.Price }

// GetDenom returns GetNFTPriceHistoryBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetNFTPriceHistoryBuysBuy.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetCreatedAt() string { return v.CreatedAt }

// GetNFTPriceHistoryResponse is returned by GetNFTPriceHistory on success.
type GetNFTPriceHistoryResponse struct {
	Buys []GetNFTPriceHistoryBuysBuy `json:"buys"`
}

// GetBuys returns GetNFTPriceHistoryResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryResponse) GetBuys() []GetNFTPriceHistoryBuysBuy { return v.Buys }

type NftContract_filter struct {
	Id                                 string      `json:"id"`
	Id_not                             string      `json:"id_not"`
	Id_gt                              string      `json:"id_gt"`
	Id_lt                              string      `json:"id_lt"`
	Id_gte                             string      `json:"id_gte"`
	Id_lte                             string      `json:"id_lte"`
	Id_in                              []string    `json:"id_in"`
	Id_not_in                          []string    `json:"id_not_in"`
	Name                               string      `json:"name"`
	Name_not                           string      `json:"name_not"`
	Name_gt                            string      `json:"name_gt"`
	Name_lt                            string      `json:"name_lt"`
	Name_gte                           string      `json:"name_gte"`
	Name_lte                           string      `json:"name_lte"`
	Name_in                            []string    `json:"name_in"`
	Name_not_in                        []string    `json:"name_not_in"`
	Name_contains                      string      `json:"name_contains"`
	Name_contains_nocase               string      `json:"name_contains_nocase"`
	Name_not_contains                  string      `json:"name_not_contains"`
	Name_not_contains_nocase           string      `json:"name_not_contains_nocase"`
	Name_starts_with                   string      `json:"name_starts_with"`
	Name_starts_with_nocase            string      `json:"name_starts_with_nocase"`
	Name_not_starts_with               string      `json:"name_not_starts_with"`
	Name_not_starts_with_nocase        string      `json:"name_not_starts_with_nocase"`
	Name_ends_with                     string      `json:"name_ends_with"`
	Name_ends_with_nocase              string      `json:"name_ends_with_nocase"`
	Name_not_ends_with                 string      `json:"name_not_ends_with"`
	Name_not_ends_with_nocase          string      `json:"name_not_ends_with_nocase"`
	Symbol                             string      `json:"symbol"`
	Symbol_not                         string      `json:"symbol_not"`
	Symbol_gt                          string      `json:"symbol_gt"`
	Symbol_lt                          string      `json:"symbol_lt"`
	Symbol_gte                         string      `json:"symbol_gte"`
	Symbol_lte                         string      `json:"symbol_lte"`
	Symbol_in                          []string    `json:"symbol_in"`
	Symbol_not_in                      []string    `json:"symbol_not_in"`
	Symbol_contains                    string      `json:"symbol_contains"`
	Symbol_contains_nocase             string      `json:"symbol_contains_nocase"`
	Symbol_not_contains                string      `json:"symbol_not_contains"`
	Symbol_not_contains_nocase         string      `json:"symbol_not_contains_nocase"`
	Symbol_starts_with                 string      `json:"symbol_starts_with"`
	Symbol_starts_with_nocase          string      `json:"symbol_starts_with_nocase"`
	Symbol_not_starts_with             string      `json:"symbol_not_starts_with"`
	Symbol_not_starts_with_nocase      string      `json:"symbol_not_starts_with_nocase"`
	Symbol_ends_with                   string      `json:"symbol_ends_with"`
	Symbol_ends_with_nocase            string      `json:"symbol_ends_with_nocase"`
	Symbol_not_ends_with               string      `json:"symbol_not_ends_with"`
	Symbol_not_ends_with_nocase        string      `json:"symbol_not_ends_with_nocase"`
	Supported                          bool        `json:"supported"`
	Supported_not                      bool        `json:"supported_not"`
	Supported_in                       []bool      `json:"supported_in"`
	Supported_not_in                   []bool      `json:"supported_not_in"`
	Minter                             string      `json:"minter"`
	Minter_not                         string      `json:"minter_not"`
	Minter_gt                          string      `json:"minter_gt"`
	Minter_lt                          string      `json:"minter_lt"`
	Minter_gte                         string      `json:"minter_gte"`
	Minter_lte                         string      `json:"minter_lte"`
	Minter_in                          []string    `json:"minter_in"`
	Minter_not_in                      []string    `json:"minter_not_in"`
	Minter_contains                    string      `json:"minter_contains"`
	Minter_not_contains                string      `json:"minter_not_contains"`
	ContractURI                        string      `json:"contractURI"`
	ContractURI_not                    string      `json:"contractURI_not"`
	ContractURI_gt                     string      `json:"contractURI_gt"`
	ContractURI_lt                     string      `json:"contractURI_lt"`
	ContractURI_gte                    string      `json:"contractURI_gte"`
	ContractURI_lte                    string      `json:"contractURI_lte"`
	ContractURI_in                     []string    `json:"contractURI_in"`
	ContractURI_not_in                 []string    `json:"contractURI_not_in"`
	ContractURI_contains               string      `json:"contractURI_contains"`
	ContractURI_contains_nocase        string      `json:"contractURI_contains_nocase"`
	ContractURI_not_contains           string      `json:"contractURI_not_contains"`
	ContractURI_not_contains_nocase    string      `json:"contractURI_not_contains_nocase"`
	ContractURI_starts_with            string      `json:"contractURI_starts_with"`
	ContractURI_starts_with_nocase     string      `json:"contractURI_starts_with_nocase"`
	ContractURI_not_starts_with        string      `json:"contractURI_not_starts_with"`
	ContractURI_not_starts_with_nocase string      `json:"contractURI_not_starts_with_nocase"`
	ContractURI_ends_with              string      `json:"contractURI_ends_with"`
	ContractURI_ends_with_nocase       string      `json:"contractURI_ends_with_nocase"`
	ContractURI_not_ends_with          string      `json:"contractURI_not_ends_with"`
	ContractURI_not_ends_with_nocase   string      `json:"contractURI_not_ends_with_nocase"`
	Nfts_                              *Nft_filter `json:"nfts_"`
	// Filter for the block changed event.
	Change_block BlockChangedFilter   `json:"_change_block"`
	And          []NftContract_filter `json:"and"`
	Or           []NftContract_filter `json:"or"`
}

// GetId returns NftContract_filter.Id, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId() string { return v.Id }

// GetId_not returns NftContract_filter.Id_not, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_not() string { return v.Id_not }

// GetId_gt returns NftContract_filter.Id_gt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_gt() string { return v.Id_gt }

// GetId_lt returns NftContract_filter.Id_lt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_lt() string { return v.Id_lt }

// GetId_gte returns NftContract_filter.Id_gte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_gte() string { return v.Id_gte }

// GetId_lte returns NftContract_filter.Id_lte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_lte() string { return v.Id_lte }

// GetId_in returns NftContract_filter.Id_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_in() []string { return v.Id_in }

// GetId_not_in returns NftContract_filter.Id_not_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetId_not_in() []string { return v.Id_not_in }

// GetName returns NftContract_filter.Name, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName() string { return v.Name }

// GetName_not returns NftContract_filter.Name_not, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not() string { return v.Name_not }

// GetName_gt returns NftContract_filter.Name_gt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_gt() string { return v.Name_gt }

// GetName_lt returns NftContract_filter.Name_lt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_lt() string { return v.Name_lt }

// GetName_gte returns NftContract_filter.Name_gte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_gte() string { return v.Name_gte }

// GetName_lte returns NftContract_filter.Name_lte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_lte() string { return v.Name_lte }

// GetName_in returns NftContract_filter.Name_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_in() []string { return v.Name_in }

// GetName_not_in returns NftContract_filter.Name_not_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_in() []string { return v.Name_not_in }

// GetName_contains returns NftContract_filter.Name_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_contains() string { return v.Name_contains }

// GetName_contains_nocase returns NftContract_filter.Name_contains_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_contains_nocase() string { return v.Name_contains_nocase }

// GetName_not_contains returns NftContract_filter.Name_not_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_contains() string { return v.Name_not_contains }

// GetName_not_contains_nocase returns NftContract_filter.Name_not_contains_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_contains_nocase() string { return v.Name_not_contains_nocase }

// GetName_starts_with returns NftContract_filter.Name_starts_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_starts_with() string { return v.Name_starts_with }

// GetName_starts_with_nocase returns NftContract_filter.Name_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_starts_with_nocase() string { return v.Name_starts_with_nocase }

// GetName_not_starts_with returns NftContract_filter.Name_not_starts_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_starts_with() string { return v.Name_not_starts_with }

// GetName_not_starts_with_nocase returns NftContract_filter.Name_not_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_starts_with_nocase() string {
	return v.Name_not_starts_with_nocase
}

// GetName_ends_with returns NftContract_filter.Name_ends_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_ends_with() string { return v.Name_ends_with }

// GetName_ends_with_nocase returns NftContract_filter.Name_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_ends_with_nocase() string { return v.Name_ends_with_nocase }

// GetName_not_ends_with returns NftContract_filter.Name_not_ends_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_ends_with() string { return v.Name_not_ends_with }

// GetName_not_ends_with_nocase returns NftContract_filter.Name_not_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetName_not_ends_with_nocase() string {
	return v.Name_not_ends_with_nocase
}

// GetSymbol returns NftContract_filter.Symbol, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol() string { return v.Symbol }

// GetSymbol_not returns NftContract_filter.Symbol_not, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not() string { return v.Symbol_not }

// GetSymbol_gt returns NftContract_filter.Symbol_gt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_gt() string { return v.Symbol_gt }

// GetSymbol_lt returns NftContract_filter.Symbol_lt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_lt() string { return v.Symbol_lt }

// GetSymbol_gte returns NftContract_filter.Symbol_gte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_gte() string { return v.Symbol_gte }

// GetSymbol_lte returns NftContract_filter.Symbol_lte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_lte() string { return v.Symbol_lte }

// GetSymbol_in returns NftContract_filter.Symbol_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_in() []string { return v.Symbol_in }

// GetSymbol_not_in returns NftContract_filter.Symbol_not_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_in() []string { return v.Symbol_not_in }

// GetSymbol_contains returns NftContract_filter.Symbol_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_contains() string { return v.Symbol_contains }

// GetSymbol_contains_nocase returns NftContract_filter.Symbol_contains_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_contains_nocase() string { return v.Symbol_contains_nocase }

// GetSymbol_not_contains returns NftContract_filter.Symbol_not_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_contains() string { return v.Symbol_not_contains }

// GetSymbol_not_contains_nocase returns NftContract_filter.Symbol_not_contains_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_contains_nocase() string {
	return v.Symbol_not_contains_nocase
}

// GetSymbol_starts_with returns NftContract_filter.Symbol_starts_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_starts_with() string { return v.Symbol_starts_with }

// GetSymbol_starts_with_nocase returns NftContract_filter.Symbol_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_starts_with_nocase() string {
	return v.Symbol_starts_with_nocase
}

// GetSymbol_not_starts_with returns NftContract_filter.Symbol_not_starts_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_starts_with() string { return v.Symbol_not_starts_with }

// GetSymbol_not_starts_with_nocase returns NftContract_filter.Symbol_not_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_starts_with_nocase() string {
	return v.Symbol_not_starts_with_nocase
}

// GetSymbol_ends_with returns NftContract_filter.Symbol_ends_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_ends_with() string { return v.Symbol_ends_with }

// GetSymbol_ends_with_nocase returns NftContract_filter.Symbol_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_ends_with_nocase() string { return v.Symbol_ends_with_nocase }

// GetSymbol_not_ends_with returns NftContract_filter.Symbol_not_ends_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_ends_with() string { return v.Symbol_not_ends_with }

// GetSymbol_not_ends_with_nocase returns NftContract_filter.Symbol_not_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSymbol_not_ends_with_nocase() string {
	return v.Symbol_not_ends_with_nocase
}

// GetSupported returns NftContract_filter.Supported, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSupported() bool { return v.Supported }

// GetSupported_not returns NftContract_filter.Supported_not, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSupported_not() bool { return v.Supported_not }

// GetSupported_in returns NftContract_filter.Supported_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSupported_in() []bool { return v.Supported_in }

// GetSupported_not_in returns NftContract_filter.Supported_not_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetSupported_not_in() []bool { return v.Supported_not_in }

// GetMinter returns NftContract_filter.Minter, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter() string { return v.Minter }

// GetMinter_not returns NftContract_filter.Minter_not, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_not() string { return v.Minter_not }

// GetMinter_gt returns NftContract_filter.Minter_gt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_gt() string { return v.Minter_gt }

// GetMinter_lt returns NftContract_filter.Minter_lt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_lt() string { return v.Minter_lt }

// GetMinter_gte returns NftContract_filter.Minter_gte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_gte() string { return v.Minter_gte }

// GetMinter_lte returns NftContract_filter.Minter_lte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_lte() string { return v.Minter_lte }

// GetMinter_in returns NftContract_filter.Minter_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_in() []string { return v.Minter_in }

// GetMinter_not_in returns NftContract_filter.Minter_not_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_not_in() []string { return v.Minter_not_in }

// GetMinter_contains returns NftContract_filter.Minter_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_contains() string { return v.Minter_contains }

// GetMinter_not_contains returns NftContract_filter.Minter_not_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetMinter_not_contains() string { return v.Minter_not_contains }

// GetContractURI returns NftContract_filter.ContractURI, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI() string { return v.ContractURI }

// GetContractURI_not returns NftContract_filter.ContractURI_not, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not() string { return v.ContractURI_not }

// GetContractURI_gt returns NftContract_filter.ContractURI_gt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_gt() string { return v.ContractURI_gt }

// GetContractURI_lt returns NftContract_filter.ContractURI_lt, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_lt() string { return v.ContractURI_lt }

// GetContractURI_gte returns NftContract_filter.ContractURI_gte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_gte() string { return v.ContractURI_gte }

// GetContractURI_lte returns NftContract_filter.ContractURI_lte, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_lte() string { return v.ContractURI_lte }

// GetContractURI_in returns NftContract_filter.ContractURI_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_in() []string { return v.ContractURI_in }

// GetContractURI_not_in returns NftContract_filter.ContractURI_not_in, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_in() []string { return v.ContractURI_not_in }

// GetContractURI_contains returns NftContract_filter.ContractURI_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_contains() string { return v.ContractURI_contains }

// GetContractURI_contains_nocase returns NftContract_filter.ContractURI_contains_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_contains_nocase() string {
	return v.ContractURI_contains_nocase
}

// GetContractURI_not_contains returns NftContract_filter.ContractURI_not_contains, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_contains() string { return v.ContractURI_not_contains }

// GetContractURI_not_contains_nocase returns NftContract_filter.ContractURI_not_contains_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_contains_nocase() string {
	return v.ContractURI_not_contains_nocase
}

// GetContractURI_starts_with returns NftContract_filter.ContractURI_starts_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_starts_with() string { return v.ContractURI_starts_with }

// GetContractURI_starts_with_nocase returns NftContract_filter.ContractURI_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_starts_with_nocase() string {
	return v.ContractURI_starts_with_nocase
}

// GetContractURI_not_starts_with returns NftContract_filter.ContractURI_not_starts_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_starts_with() string {
	return v.ContractURI_not_starts_with
}

// GetContractURI_not_starts_with_nocase returns NftContract_filter.ContractURI_not_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_starts_with_nocase() string {
	return v.ContractURI_not_starts_with_nocase
}

// GetContractURI_ends_with returns NftContract_filter.ContractURI_ends_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_ends_with() string { return v.ContractURI_ends_with }

// GetContractURI_ends_with_nocase returns NftContract_filter.ContractURI_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_ends_with_nocase() string {
	return v.ContractURI_ends_with_nocase
}

// GetContractURI_not_ends_with returns NftContract_filter.ContractURI_not_ends_with, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_ends_with() string {
	return v.ContractURI_not_ends_with
}

// GetContractURI_not_ends_with_nocase returns NftContract_filter.ContractURI_not_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetContractURI_not_ends_with_nocase() string {
	return v.ContractURI_not_ends_with_nocase
}

// GetNfts_ returns NftContract_filter.Nfts_, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetNfts_() Nft_filter { return *v.Nfts_ }

// GetChange_block returns NftContract_filter.Change_block, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetChange_block() BlockChangedFilter { return v.Change_block }

// GetAnd returns NftContract_filter.And, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetAnd() []NftContract_filter { return v.And }

// GetOr returns NftContract_filter.Or, and is useful for accessing the field via an interface.
func (v *NftContract_filter) GetOr() []NftContract_filter { return v.Or }

type Nft_filter struct {
	Id                                 string             `json:"id"`
	Id_not                             string             `json:"id_not"`
	Id_gt                              string             `json:"id_gt"`
	Id_lt                              string             `json:"id_lt"`
	Id_gte                             string             `json:"id_gte"`
	Id_lte                             string             `json:"id_lte"`
	Id_in                              []string           `json:"id_in"`
	Id_not_in                          []string           `json:"id_not_in"`
	Contract                           string             `json:"contract"`
	Contract_not                       string             `json:"contract_not"`
	Contract_gt                        string             `json:"contract_gt"`
	Contract_lt                        string             `json:"contract_lt"`
	Contract_gte                       string             `json:"contract_gte"`
	Contract_lte                       string             `json:"contract_lte"`
	Contract_in                        []string           `json:"contract_in"`
	Contract_not_in                    []string           `json:"contract_not_in"`
	Contract_contains                  string             `json:"contract_contains"`
	Contract_contains_nocase           string             `json:"contract_contains_nocase"`
	Contract_not_contains              string             `json:"contract_not_contains"`
	Contract_not_contains_nocase       string             `json:"contract_not_contains_nocase"`
	Contract_starts_with               string             `json:"contract_starts_with"`
	Contract_starts_with_nocase        string             `json:"contract_starts_with_nocase"`
	Contract_not_starts_with           string             `json:"contract_not_starts_with"`
	Contract_not_starts_with_nocase    string             `json:"contract_not_starts_with_nocase"`
	Contract_ends_with                 string             `json:"contract_ends_with"`
	Contract_ends_with_nocase          string             `json:"contract_ends_with_nocase"`
	Contract_not_ends_with             string             `json:"contract_not_ends_with"`
	Contract_not_ends_with_nocase      string             `json:"contract_not_ends_with_nocase"`
	Contract_                          NftContract_filter `json:"contract_"`
	TokenID                            string             `json:"tokenID"`
	TokenID_not                        string             `json:"tokenID_not"`
	TokenID_gt                         string             `json:"tokenID_gt"`
	TokenID_lt                         string             `json:"tokenID_lt"`
	TokenID_gte                        string             `json:"tokenID_gte"`
	TokenID_lte                        string             `json:"tokenID_lte"`
	TokenID_in                         []string           `json:"tokenID_in"`
	TokenID_not_in                     []string           `json:"tokenID_not_in"`
	Owner                              string             `json:"owner"`
	Owner_not                          string             `json:"owner_not"`
	Owner_gt                           string             `json:"owner_gt"`
	Owner_lt                           string             `json:"owner_lt"`
	Owner_gte                          string             `json:"owner_gte"`
	Owner_lte                          string             `json:"owner_lte"`
	Owner_in                           []string           `json:"owner_in"`
	Owner_not_in                       []string           `json:"owner_not_in"`
	Owner_contains                     string             `json:"owner_contains"`
	Owner_not_contains                 string             `json:"owner_not_contains"`
	CreatorName                        string             `json:"creatorName"`
	CreatorName_not                    string             `json:"creatorName_not"`
	CreatorName_gt                     string             `json:"creatorName_gt"`
	CreatorName_lt                     string             `json:"creatorName_lt"`
	CreatorName_gte                    string             `json:"creatorName_gte"`
	CreatorName_lte                    string             `json:"creatorName_lte"`
	CreatorName_in                     []string           `json:"creatorName_in"`
	CreatorName_not_in                 []string           `json:"creatorName_not_in"`
	CreatorName_contains               string             `json:"creatorName_contains"`
	CreatorName_contains_nocase        string             `json:"creatorName_contains_nocase"`
	CreatorName_not_contains           string             `json:"creatorName_not_contains"`
	CreatorName_not_contains_nocase    string             `json:"creatorName_not_contains_nocase"`
	CreatorName_starts_with            string             `json:"creatorName_starts_with"`
	CreatorName_starts_with_nocase     string             `json:"creatorName_starts_with_nocase"`
	CreatorName_not_starts_with        string             `json:"creatorName_not_starts_with"`
	CreatorName_not_starts_with_nocase string             `json:"creatorName_not_starts_with_nocase"`
	CreatorName_ends_with              string             `json:"creatorName_ends_with"`
	CreatorName_ends_with_nocase       string             `json:"creatorName_ends_with_nocase"`
	CreatorName_not_ends_with          string             `json:"creatorName_not_ends_with"`
	CreatorName_not_ends_with_nocase   string             `json:"creatorName_not_ends_with_nocase"`
	CreatorAddress                     string             `json:"creatorAddress"`
	CreatorAddress_not                 string             `json:"creatorAddress_not"`
	CreatorAddress_gt                  string             `json:"creatorAddress_gt"`
	CreatorAddress_lt                  string             `json:"creatorAddress_lt"`
	CreatorAddress_gte                 string             `json:"creatorAddress_gte"`
	CreatorAddress_lte                 string             `json:"creatorAddress_lte"`
	CreatorAddress_in                  []string           `json:"creatorAddress_in"`
	CreatorAddress_not_in              []string           `json:"creatorAddress_not_in"`
	CreatorAddress_contains            string             `json:"creatorAddress_contains"`
	CreatorAddress_not_contains        string             `json:"creatorAddress_not_contains"`
	Seller                             string             `json:"seller"`
	Seller_not                         string             `json:"seller_not"`
	Seller_gt                          string             `json:"seller_gt"`
	Seller_lt                          string             `json:"seller_lt"`
	Seller_gte                         string             `json:"seller_gte"`
	Seller_lte                         string             `json:"seller_lte"`
	Seller_in                          []string           `json:"seller_in"`
	Seller_not_in                      []string           `json:"seller_not_in"`
	Seller_contains                    string             `json:"seller_contains"`
	Seller_not_contains                string             `json:"seller_not_contains"`
	TokenURI                           string             `json:"tokenURI"`
	TokenURI_not                       string             `json:"tokenURI_not"`
	TokenURI_gt                        string             `json:"tokenURI_gt"`
	TokenURI_lt                        string             `json:"tokenURI_lt"`
	TokenURI_gte                       string             `json:"tokenURI_gte"`
	TokenURI_lte                       string             `json:"tokenURI_lte"`
	TokenURI_in                        []string           `json:"tokenURI_in"`
	TokenURI_not_in                    []string           `json:"tokenURI_not_in"`
	TokenURI_contains                  string             `json:"tokenURI_contains"`
	TokenURI_contains_nocase           string             `json:"tokenURI_contains_nocase"`
	TokenURI_not_contains              string             `json:"tokenURI_not_contains"`
	TokenURI_not_contains_nocase       string             `json:"tokenURI_not_contains_nocase"`
	TokenURI_starts_with               string             `json:"tokenURI_starts_with"`
	TokenURI_starts_with_nocase        string             `json:"tokenURI_starts_with_nocase"`
	TokenURI_not_starts_with           string             `json:"tokenURI_not_starts_with"`
	TokenURI_not_starts_with_nocase    string             `json:"tokenURI_not_starts_with_nocase"`
	TokenURI_ends_with                 string             `json:"tokenURI_ends_with"`
	TokenURI_ends_with_nocase          string             `json:"tokenURI_ends_with_nocase"`
	TokenURI_not_ends_with             string             `json:"tokenURI_not_ends_with"`
	TokenURI_not_ends_with_nocase      string             `json:"tokenURI_not_ends_with_nocase"`
	InSale                             bool               `json:"inSale"`
	InSale_not                         bool               `json:"inSale_not"`
	InSale_in                          []bool             `json:"inSale_in"`
	InSale_not_in                      []bool             `json:"inSale_not_in"`
	Price                              string             `json:"price"`
	Price_not                          string             `json:"price_not"`
	Price_gt                           string             `json:"price_gt"`
	Price_lt                           string             `json:"price_lt"`
	Price_gte                          string             `json:"price_gte"`
	Price_lte                          string             `json:"price_lte"`
	Price_in                           []string           `json:"price_in"`
	Price_not_in                       []string           `json:"price_not_in"`
	Denom                              string             `json:"denom"`
	Denom_not                          string             `json:"denom_not"`
	Denom_gt                           string             `json:"denom_gt"`
	Denom_lt                           string             `json:"denom_lt"`
	Denom_gte                          string             `json:"denom_gte"`
	Denom_lte                          string             `json:"denom_lte"`
	Denom_in                           []string           `json:"denom_in"`
	Denom_not_in                       []string           `json:"denom_not_in"`
	Denom_contains                     string             `json:"denom_contains"`
	Denom_not_contains                 string             `json:"denom_not_contains"`
	CreatedAt                          string             `json:"createdAt"`
	CreatedAt_not                      string             `json:"createdAt_not"`
	CreatedAt_gt                       string             `json:"createdAt_gt"`
	CreatedAt_lt                       string             `json:"createdAt_lt"`
	CreatedAt_gte                      string             `json:"createdAt_gte"`
	CreatedAt_lte                      string             `json:"createdAt_lte"`
	CreatedAt_in                       []string           `json:"createdAt_in"`
	CreatedAt_not_in                   []string           `json:"createdAt_not_in"`
	RemovedAt                          string             `json:"removedAt"`
	RemovedAt_not                      string             `json:"removedAt_not"`
	RemovedAt_gt                       string             `json:"removedAt_gt"`
	RemovedAt_lt                       string             `json:"removedAt_lt"`
	RemovedAt_gte                      string             `json:"removedAt_gte"`
	RemovedAt_lte                      string             `json:"removedAt_lte"`
	RemovedAt_in                       []string           `json:"removedAt_in"`
	RemovedAt_not_in                   []string           `json:"removedAt_not_in"`
	// Filter for the block changed event.
	Change_block BlockChangedFilter `json:"_change_block"`
	And          []Nft_filter       `json:"and"`
	Or           []Nft_filter       `json:"or"`
}

// GetId returns Nft_filter.Id, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId() string { return v.Id }

// GetId_not returns Nft_filter.Id_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_not() string { return v.Id_not }

// GetId_gt returns Nft_filter.Id_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_gt() string { return v.Id_gt }

// GetId_lt returns Nft_filter.Id_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_lt() string { return v.Id_lt }

// GetId_gte returns Nft_filter.Id_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_gte() string { return v.Id_gte }

// GetId_lte returns Nft_filter.Id_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_lte() string { return v.Id_lte }

// GetId_in returns Nft_filter.Id_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_in() []string { return v.Id_in }

// GetId_not_in returns Nft_filter.Id_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetId_not_in() []string { return v.Id_not_in }

// GetContract returns Nft_filter.Contract, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract() string { return v.Contract }

// GetContract_not returns Nft_filter.Contract_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not() string { return v.Contract_not }

// GetContract_gt returns Nft_filter.Contract_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_gt() string { return v.Contract_gt }

// GetContract_lt returns Nft_filter.Contract_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_lt() string { return v.Contract_lt }

// GetContract_gte returns Nft_filter.Contract_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_gte() string { return v.Contract_gte }

// GetContract_lte returns Nft_filter.Contract_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_lte() string { return v.Contract_lte }

// GetContract_in returns Nft_filter.Contract_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_in() []string { return v.Contract_in }

// GetContract_not_in returns Nft_filter.Contract_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_in() []string { return v.Contract_not_in }

// GetContract_contains returns Nft_filter.Contract_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_contains() string { return v.Contract_contains }

// GetContract_contains_nocase returns Nft_filter.Contract_contains_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_contains_nocase() string { return v.Contract_contains_nocase }

// GetContract_not_contains returns Nft_filter.Contract_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_contains() string { return v.Contract_not_contains }

// GetContract_not_contains_nocase returns Nft_filter.Contract_not_contains_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_contains_nocase() string { return v.Contract_not_contains_nocase }

// GetContract_starts_with returns Nft_filter.Contract_starts_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_starts_with() string { return v.Contract_starts_with }

// GetContract_starts_with_nocase returns Nft_filter.Contract_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_starts_with_nocase() string { return v.Contract_starts_with_nocase }

// GetContract_not_starts_with returns Nft_filter.Contract_not_starts_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_starts_with() string { return v.Contract_not_starts_with }

// GetContract_not_starts_with_nocase returns Nft_filter.Contract_not_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_starts_with_nocase() string {
	return v.Contract_not_starts_with_nocase
}

// GetContract_ends_with returns Nft_filter.Contract_ends_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_ends_with() string { return v.Contract_ends_with }

// GetContract_ends_with_nocase returns Nft_filter.Contract_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_ends_with_nocase() string { return v.Contract_ends_with_nocase }

// GetContract_not_ends_with returns Nft_filter.Contract_not_ends_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_ends_with() string { return v.Contract_not_ends_with }

// GetContract_not_ends_with_nocase returns Nft_filter.Contract_not_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_not_ends_with_nocase() string {
	return v.Contract_not_ends_with_nocase
}

// GetContract_ returns Nft_filter.Contract_, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetContract_() NftContract_filter { return v.Contract_ }

// GetTokenID returns Nft_filter.TokenID, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID() string { return v.TokenID }

// GetTokenID_not returns Nft_filter.TokenID_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_not() string { return v.TokenID_not }

// GetTokenID_gt returns Nft_filter.TokenID_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_gt() string { return v.TokenID_gt }

// GetTokenID_lt returns Nft_filter.TokenID_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_lt() string { return v.TokenID_lt }

// GetTokenID_gte returns Nft_filter.TokenID_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_gte() string { return v.TokenID_gte }

// GetTokenID_lte returns Nft_filter.TokenID_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_lte() string { return v.TokenID_lte }

// GetTokenID_in returns Nft_filter.TokenID_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_in() []string { return v.TokenID_in }

// GetTokenID_not_in returns Nft_filter.TokenID_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenID_not_in() []string { return v.TokenID_not_in }

// GetOwner returns Nft_filter.Owner, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner() string { return v.Owner }

// GetOwner_not returns Nft_filter.Owner_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_not() string { return v.Owner_not }

// GetOwner_gt returns Nft_filter.Owner_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_gt() string { return v.Owner_gt }

// GetOwner_lt returns Nft_filter.Owner_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_lt() string { return v.Owner_lt }

// GetOwner_gte returns Nft_filter.Owner_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_gte() string { return v.Owner_gte }

// GetOwner_lte returns Nft_filter.Owner_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_lte() string { return v.Owner_lte }

// GetOwner_in returns Nft_filter.Owner_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_in() []string { return v.Owner_in }

// GetOwner_not_in returns Nft_filter.Owner_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_not_in() []string { return v.Owner_not_in }

// GetOwner_contains returns Nft_filter.Owner_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_contains() string { return v.Owner_contains }

// GetOwner_not_contains returns Nft_filter.Owner_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOwner_not_contains() string { return v.Owner_not_contains }

// GetCreatorName returns Nft_filter.CreatorName, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName() string { return v.CreatorName }

// GetCreatorName_not returns Nft_filter.CreatorName_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not() string { return v.CreatorName_not }

// GetCreatorName_gt returns Nft_filter.CreatorName_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_gt() string { return v.CreatorName_gt }

// GetCreatorName_lt returns Nft_filter.CreatorName_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_lt() string { return v.CreatorName_lt }

// GetCreatorName_gte returns Nft_filter.CreatorName_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_gte() string { return v.CreatorName_gte }

// GetCreatorName_lte returns Nft_filter.CreatorName_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_lte() string { return v.CreatorName_lte }

// GetCreatorName_in returns Nft_filter.CreatorName_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_in() []string { return v.CreatorName_in }

// GetCreatorName_not_in returns Nft_filter.CreatorName_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_in() []string { return v.CreatorName_not_in }

// GetCreatorName_contains returns Nft_filter.CreatorName_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_contains() string { return v.CreatorName_contains }

// GetCreatorName_contains_nocase returns Nft_filter.CreatorName_contains_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_contains_nocase() string { return v.CreatorName_contains_nocase }

// GetCreatorName_not_contains returns Nft_filter.CreatorName_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_contains() string { return v.CreatorName_not_contains }

// GetCreatorName_not_contains_nocase returns Nft_filter.CreatorName_not_contains_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_contains_nocase() string {
	return v.CreatorName_not_contains_nocase
}

// GetCreatorName_starts_with returns Nft_filter.CreatorName_starts_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_starts_with() string { return v.CreatorName_starts_with }

// GetCreatorName_starts_with_nocase returns Nft_filter.CreatorName_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_starts_with_nocase() string {
	return v.CreatorName_starts_with_nocase
}

// GetCreatorName_not_starts_with returns Nft_filter.CreatorName_not_starts_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_starts_with() string { return v.CreatorName_not_starts_with }

// GetCreatorName_not_starts_with_nocase returns Nft_filter.CreatorName_not_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_starts_with_nocase() string {
	return v.CreatorName_not_starts_with_nocase
}

// GetCreatorName_ends_with returns Nft_filter.CreatorName_ends_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_ends_with() string { return v.CreatorName_ends_with }

// GetCreatorName_ends_with_nocase returns Nft_filter.CreatorName_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_ends_with_nocase() string { return v.CreatorName_ends_with_nocase }

// GetCreatorName_not_ends_with returns Nft_filter.CreatorName_not_ends_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_ends_with() string { return v.CreatorName_not_ends_with }

// GetCreatorName_not_ends_with_nocase returns Nft_filter.CreatorName_not_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorName_not_ends_with_nocase() string {
	return v.CreatorName_not_ends_with_nocase
}

// GetCreatorAddress returns Nft_filter.CreatorAddress, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress() string { return v.CreatorAddress }

// GetCreatorAddress_not returns Nft_filter.CreatorAddress_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_not() string { return v.CreatorAddress_not }

// GetCreatorAddress_gt returns Nft_filter.CreatorAddress_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_gt() string { return v.CreatorAddress_gt }

// GetCreatorAddress_lt returns Nft_filter.CreatorAddress_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_lt() string { return v.CreatorAddress_lt }

// GetCreatorAddress_gte returns Nft_filter.CreatorAddress_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_gte() string { return v.CreatorAddress_gte }

// GetCreatorAddress_lte returns Nft_filter.CreatorAddress_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_lte() string { return v.CreatorAddress_lte }

// GetCreatorAddress_in returns Nft_filter.CreatorAddress_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_in() []string { return v.CreatorAddress_in }

// GetCreatorAddress_not_in returns Nft_filter.CreatorAddress_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_not_in() []string { return v.CreatorAddress_not_in }

// GetCreatorAddress_contains returns Nft_filter.CreatorAddress_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_contains() string { return v.CreatorAddress_contains }

// GetCreatorAddress_not_contains returns Nft_filter.CreatorAddress_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatorAddress_not_contains() string { return v.CreatorAddress_not_contains }

// GetSeller returns Nft_filter.Seller, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller() string { return v.Seller }

// GetSeller_not returns Nft_filter.Seller_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_not() string { return v.Seller_not }

// GetSeller_gt returns Nft_filter.Seller_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_gt() string { return v.Seller_gt }

// GetSeller_lt returns Nft_filter.Seller_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_lt() string { return v.Seller_lt }

// GetSeller_gte returns Nft_filter.Seller_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_gte() string { return v.Seller_gte }

// GetSeller_lte returns Nft_filter.Seller_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_lte() string { return v.Seller_lte }

// GetSeller_in returns Nft_filter.Seller_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_in() []string { return v.Seller_in }

// GetSeller_not_in returns Nft_filter.Seller_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_not_in() []string { return v.Seller_not_in }

// GetSeller_contains returns Nft_filter.Seller_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_contains() string { return v.Seller_contains }

// GetSeller_not_contains returns Nft_filter.Seller_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetSeller_not_contains() string { return v.Seller_not_contains }

// GetTokenURI returns Nft_filter.TokenURI, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI() string { return v.TokenURI }

// GetTokenURI_not returns Nft_filter.TokenURI_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not() string { return v.TokenURI_not }

// GetTokenURI_gt returns Nft_filter.TokenURI_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_gt() string { return v.TokenURI_gt }

// GetTokenURI_lt returns Nft_filter.TokenURI_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_lt() string { return v.TokenURI_lt }

// GetTokenURI_gte returns Nft_filter.TokenURI_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_gte() string { return v.TokenURI_gte }

// GetTokenURI_lte returns Nft_filter.TokenURI_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_lte() string { return v.TokenURI_lte }

// GetTokenURI_in returns Nft_filter.TokenURI_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_in() []string { return v.TokenURI_in }

// GetTokenURI_not_in returns Nft_filter.TokenURI_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_in() []string { return v.TokenURI_not_in }

// GetTokenURI_contains returns Nft_filter.TokenURI_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_contains() string { return v.TokenURI_contains }

// GetTokenURI_contains_nocase returns Nft_filter.TokenURI_contains_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_contains_nocase() string { return v.TokenURI_contains_nocase }

// GetTokenURI_not_contains returns Nft_filter.TokenURI_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_contains() string { return v.TokenURI_not_contains }

// GetTokenURI_not_contains_nocase returns Nft_filter.TokenURI_not_contains_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_contains_nocase() string { return v.TokenURI_not_contains_nocase }

// GetTokenURI_starts_with returns Nft_filter.TokenURI_starts_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_starts_with() string { return v.TokenURI_starts_with }

// GetTokenURI_starts_with_nocase returns Nft_filter.TokenURI_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_starts_with_nocase() string { return v.TokenURI_starts_with_nocase }

// GetTokenURI_not_starts_with returns Nft_filter.TokenURI_not_starts_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_starts_with() string { return v.TokenURI_not_starts_with }

// GetTokenURI_not_starts_with_nocase returns Nft_filter.TokenURI_not_starts_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_starts_with_nocase() string {
	return v.TokenURI_not_starts_with_nocase
}

// GetTokenURI_ends_with returns Nft_filter.TokenURI_ends_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_ends_with() string { return v.TokenURI_ends_with }

// GetTokenURI_ends_with_nocase returns Nft_filter.TokenURI_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_ends_with_nocase() string { return v.TokenURI_ends_with_nocase }

// GetTokenURI_not_ends_with returns Nft_filter.TokenURI_not_ends_with, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_ends_with() string { return v.TokenURI_not_ends_with }

// GetTokenURI_not_ends_with_nocase returns Nft_filter.TokenURI_not_ends_with_nocase, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetTokenURI_not_ends_with_nocase() string {
	return v.TokenURI_not_ends_with_nocase
}

// GetInSale returns Nft_filter.InSale, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetInSale() bool { return v.InSale }

// GetInSale_not returns Nft_filter.InSale_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetInSale_not() bool { return v.InSale_not }

// GetInSale_in returns Nft_filter.InSale_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetInSale_in() []bool { return v.InSale_in }

// GetInSale_not_in returns Nft_filter.InSale_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetInSale_not_in() []bool { return v.InSale_not_in }

// GetPrice returns Nft_filter.Price, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice() string { return v.Price }

// GetPrice_not returns Nft_filter.Price_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_not() string { return v.Price_not }

// GetPrice_gt returns Nft_filter.Price_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_gt() string { return v.Price_gt }

// GetPrice_lt returns Nft_filter.Price_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_lt() string { return v.Price_lt }

// GetPrice_gte returns Nft_filter.Price_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_gte() string { return v.Price_gte }

// GetPrice_lte returns Nft_filter.Price_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_lte() string { return v.Price_lte }

// GetPrice_in returns Nft_filter.Price_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_in() []string { return v.Price_in }

// GetPrice_not_in returns Nft_filter.Price_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetPrice_not_in() []string { return v.Price_not_in }

// GetDenom returns Nft_filter.Denom, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom() string { return v.Denom }

// GetDenom_not returns Nft_filter.Denom_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_not() string { return v.Denom_not }

// GetDenom_gt returns Nft_filter.Denom_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_gt() string { return v.Denom_gt }

// GetDenom_lt returns Nft_filter.Denom_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_lt() string { return v.Denom_lt }

// GetDenom_gte returns Nft_filter.Denom_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_gte() string { return v.Denom_gte }

// GetDenom_lte returns Nft_filter.Denom_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_lte() string { return v.Denom_lte }

// GetDenom_in returns Nft_filter.Denom_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_in() []string { return v.Denom_in }

// GetDenom_not_in returns Nft_filter.Denom_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_not_in() []string { return v.Denom_not_in }

// GetDenom_contains returns Nft_filter.Denom_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_contains() string { return v.Denom_contains }

// GetDenom_not_contains returns Nft_filter.Denom_not_contains, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetDenom_not_contains() string { return v.Denom_not_contains }

// GetCreatedAt returns Nft_filter.CreatedAt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt() string { return v.CreatedAt }

// GetCreatedAt_not returns Nft_filter.CreatedAt_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_not() string { return v.CreatedAt_not }

// GetCreatedAt_gt returns Nft_filter.CreatedAt_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_gt() string { return v.CreatedAt_gt }

// GetCreatedAt_lt returns Nft_filter.CreatedAt_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_lt() string { return v.CreatedAt_lt }

// GetCreatedAt_gte returns Nft_filter.CreatedAt_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_gte() string { return v.CreatedAt_gte }

// GetCreatedAt_lte returns Nft_filter.CreatedAt_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_lte() string { return v.CreatedAt_lte }

// GetCreatedAt_in returns Nft_filter.CreatedAt_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_in() []string { return v.CreatedAt_in }

// GetCreatedAt_not_in returns Nft_filter.CreatedAt_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetCreatedAt_not_in() []string { return v.CreatedAt_not_in }

// GetRemovedAt returns Nft_filter.RemovedAt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt() string { return v.RemovedAt }

// GetRemovedAt_not returns Nft_filter.RemovedAt_not, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_not() string { return v.RemovedAt_not }

// GetRemovedAt_gt returns Nft_filter.RemovedAt_gt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_gt() string { return v.RemovedAt_gt }

// GetRemovedAt_lt returns Nft_filter.RemovedAt_lt, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_lt() string { return v.RemovedAt_lt }

// GetRemovedAt_gte returns Nft_filter.RemovedAt_gte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_gte() string { return v.RemovedAt_gte }

// GetRemovedAt_lte returns Nft_filter.RemovedAt_lte, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_lte() string { return v.RemovedAt_lte }

// GetRemovedAt_in returns Nft_filter.RemovedAt_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_in() []string { return v.RemovedAt_in }

// GetRemovedAt_not_in returns Nft_filter.RemovedAt_not_in, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetRemovedAt_not_in() []string { return v.RemovedAt_not_in }

// GetChange_block returns Nft_filter.Change_block, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetChange_block() BlockChangedFilter { return v.Change_block }

// GetAnd returns Nft_filter.And, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetAnd() []Nft_filter { return v.And }

// GetOr returns Nft_filter.Or, and is useful for accessing the field via an interface.
func (v *Nft_filter) GetOr() []Nft_filter { return v.Or }

type Nft_orderBy string

const (
	Nft_orderById                  Nft_orderBy = "id"
	Nft_orderByContract            Nft_orderBy = "contract"
	Nft_orderByContractId          Nft_orderBy = "contract__id"
	Nft_orderByContractName        Nft_orderBy = "contract__name"
	Nft_orderByContractSymbol      Nft_orderBy = "contract__symbol"
	Nft_orderByContractSupported   Nft_orderBy = "contract__supported"
	Nft_orderByContractMinter      Nft_orderBy = "contract__minter"
	Nft_orderByContractContracturi Nft_orderBy = "contract__contractURI"
	Nft_orderByTokenid             Nft_orderBy = "tokenID"
	Nft_orderByOwner               Nft_orderBy = "owner"
	Nft_orderByCreatorname         Nft_orderBy = "creatorName"
	Nft_orderByCreatoraddress      Nft_orderBy = "creatorAddress"
	Nft_orderBySeller              Nft_orderBy = "seller"
	Nft_orderByTokenuri            Nft_orderBy = "tokenURI"
	Nft_orderByInsale              Nft_orderBy = "inSale"
	Nft_orderByPrice               Nft_orderBy = "price"
	Nft_orderByDenom               Nft_orderBy = "denom"
	Nft_orderByCreatedat           Nft_orderBy = "createdAt"
	Nft_orderByRemovedat           Nft_orderBy = "removedAt"
)

// Defines the order direction, either ascending or descending
type OrderDirection string

const (
	OrderDirectionAsc  OrderDirection = "asc"
	OrderDirectionDesc OrderDirection = "desc"
)

// __GetCollectionActivitiesInput is used internally by genqlient
type __GetCollectionActivitiesInput struct {
	Minter string `json:"minter"`
}

// GetMinter returns __GetCollectionActivitiesInput.Minter, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetMinter() string { return v.Minter }

// __GetCollectionNFTsInput is used internally by genqlient
type __GetCollectionNFTsInput struct {
	NftContractFilter NftContract_filter `json:"nftContractFilter"`
	NftFilter         Nft_filter         `json:"nftFilter"`
	OrderBy           Nft_orderBy        `json:"orderBy"`
	OrderDirection    OrderDirection     `json:"orderDirection"`
}

// GetNftContractFilter returns __GetCollectionNFTsInput.NftContractFilter, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetNftContractFilter() NftContract_filter {
	return v.NftContractFilter
}

// GetNftFilter returns __GetCollectionNFTsInput.NftFilter, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetNftFilter() Nft_filter { return v.NftFilter }

// GetOrderBy returns __GetCollectionNFTsInput.OrderBy, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetOrderBy() Nft_orderBy { return v.OrderBy }

// GetOrderDirection returns __GetCollectionNFTsInput.OrderDirection, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetOrderDirection() OrderDirection { return v.OrderDirection }

// __GetCollectionStatsInput is used internally by genqlient
type __GetCollectionStatsInput struct {
	Minter string `json:"minter"`
}

// GetMinter returns __GetCollectionStatsInput.Minter, and is useful for accessing the field via an interface.
func (v *__GetCollectionStatsInput) GetMinter() string { return v.Minter }

// __GetCollectionsInput is used internally by genqlient
type __GetCollectionsInput struct {
	From string `json:"from"`
}

// GetFrom returns __GetCollectionsInput.From, and is useful for accessing the field via an interface.
func (v *__GetCollectionsInput) GetFrom() string { return v.From }

// __GetNFTActivitiesInput is used internally by genqlient
type __GetNFTActivitiesInput struct {
	NftID string `json:"nftID"`
}

// GetNftID returns __GetNFTActivitiesInput.NftID, and is useful for accessing the field via an interface.
func (v *__GetNFTActivitiesInput) GetNftID() string { return v.NftID }

// __GetNFTPriceHistoryInput is used internally by genqlient
type __GetNFTPriceHistoryInput struct {
	Nft string `json:"nft"`
}

// GetNft returns __GetNFTPriceHistoryInput.Nft, and is useful for accessing the field via an interface.
func (v *__GetNFTPriceHistoryInput) GetNft() string { return v.Nft }

func GetCollectionActivities(
	ctx context.Context,
	client graphql.Client,
	minter string,
) (*GetCollectionActivitiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionActivities",
		Query: `
query GetCollectionActivities ($minter: Bytes!) {
	actions(where: {minter:$minter}, orderBy: createdAt, orderDirection: desc) {
		id
		nft {
			id
			tokenURI
			contract {
				minter
				id
				name
			}
		}
		buy {
			price
			denom
			seller
		}
		list {
			price
			denom
		}
		action
		actor
		receiver
		txID
		createdAt
	}
}
`,
		Variables: &__GetCollectionActivitiesInput{
			Minter: minter,
		},
	}
	var err error

	var data GetCollectionActivitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollectionNFTs(
	ctx context.Context,
	client graphql.Client,
	nftContractFilter NftContract_filter,
	nftFilter Nft_filter,
	orderBy Nft_orderBy,
	orderDirection OrderDirection,
) (*GetCollectionNFTsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionNFTs",
		Query: `
query GetCollectionNFTs ($nftContractFilter: NftContract_filter, $nftFilter: Nft_filter, $orderBy: Nft_orderBy, $orderDirection: OrderDirection) {
	nftContracts(where: $nftContractFilter) {
		id
		name
		minter
		symbol
		nfts(where: $nftFilter, orderBy: $orderBy, orderDirection: $orderDirection) {
			id
			tokenID
			owner
			seller
			creatorName
			creatorAddress
			tokenURI
			inSale
			price
			denom
			createdAt
			removedAt
		}
	}
}
`,
		Variables: &__GetCollectionNFTsInput{
			NftContractFilter: nftContractFilter,
			NftFilter:         nftFilter,
			OrderBy:           orderBy,
			OrderDirection:    orderDirection,
		},
	}
	var err error

	var data GetCollectionNFTsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollectionStats(
	ctx context.Context,
	client graphql.Client,
	minter string,
) (*GetCollectionStatsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionStats",
		Query: `
query GetCollectionStats ($minter: Bytes!) {
	nftContracts(where: {minter:$minter}) {
		id
		name
		symbol
		nfts {
			id
			owner
			creatorName
			creatorAddress
			tokenURI
			inSale
			price
			denom
			createdAt
		}
	}
	buys(where: {minter:$minter}) {
		price
		denom
	}
}
`,
		Variables: &__GetCollectionStatsInput{
			Minter: minter,
		},
	}
	var err error

	var data GetCollectionStatsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollections(
	ctx context.Context,
	client graphql.Client,
	from string,
) (*GetCollectionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollections",
		Query: `
query GetCollections ($from: BigInt!) {
	nftContracts {
		id
		supported
		name
		minter
	}
	buys(where: {createdAt_gt:$from}) {
		id
		nft {
			id
			contract {
				id
			}
		}
		denom
		price
	}
}
`,
		Variables: &__GetCollectionsInput{
			From: from,
		},
	}
	var err error

	var data GetCollectionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNFTActivities(
	ctx context.Context,
	client graphql.Client,
	nftID string,
) (*GetNFTActivitiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetNFTActivities",
		Query: `
query GetNFTActivities ($nftID: String!) {
	actions(where: {nft:$nftID}, orderBy: createdAt, orderDirection: desc) {
		id
		nft {
			id
			tokenURI
			contract {
				minter
				id
				name
			}
		}
		buy {
			price
			denom
			seller
		}
		list {
			price
			denom
		}
		action
		actor
		receiver
		txID
		createdAt
	}
}
`,
		Variables: &__GetNFTActivitiesInput{
			NftID: nftID,
		},
	}
	var err error

	var data GetNFTActivitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNFTPriceHistory(
	ctx context.Context,
	client graphql.Client,
	nft string,
) (*GetNFTPriceHistoryResponse, error) {
	req := &graphql.Request{
		OpName: "GetNFTPriceHistory",
		Query: `
query GetNFTPriceHistory ($nft: String!) {
	buys(where: {nft:$nft}) {
		price
		denom
		createdAt
	}
}
`,
		Variables: &__GetNFTPriceHistoryInput{
			Nft: nft,
		},
	}
	var err error

	var data GetNFTPriceHistoryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
