// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package thegraph

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetCollectionActivitiesActionsAction includes the requested fields of the GraphQL type Action.
type GetCollectionActivitiesActionsAction struct {
	Id        string                                   `json:"id"`
	Nft       GetCollectionActivitiesActionsActionNft  `json:"nft"`
	Buy       GetCollectionActivitiesActionsActionBuy  `json:"buy"`
	List      GetCollectionActivitiesActionsActionList `json:"list"`
	Action    string                                   `json:"action"`
	Actor     string                                   `json:"actor"`
	TxID      string                                   `json:"txID"`
	CreatedAt string                                   `json:"createdAt"`
}

// GetId returns GetCollectionActivitiesActionsAction.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetId() string { return v.Id }

// GetNft returns GetCollectionActivitiesActionsAction.Nft, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetNft() GetCollectionActivitiesActionsActionNft {
	return v.Nft
}

// GetBuy returns GetCollectionActivitiesActionsAction.Buy, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetBuy() GetCollectionActivitiesActionsActionBuy {
	return v.Buy
}

// GetList returns GetCollectionActivitiesActionsAction.List, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetList() GetCollectionActivitiesActionsActionList {
	return v.List
}

// GetAction returns GetCollectionActivitiesActionsAction.Action, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetAction() string { return v.Action }

// GetActor returns GetCollectionActivitiesActionsAction.Actor, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetActor() string { return v.Actor }

// GetTxID returns GetCollectionActivitiesActionsAction.TxID, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetTxID() string { return v.TxID }

// GetCreatedAt returns GetCollectionActivitiesActionsAction.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetCreatedAt() string { return v.CreatedAt }

// GetCollectionActivitiesActionsActionBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionActivitiesActionsActionBuy struct {
	Price  string `json:"price"`
	Denom  string `json:"denom"`
	Seller string `json:"seller"`
}

// GetPrice returns GetCollectionActivitiesActionsActionBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionBuy) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionActivitiesActionsActionBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionBuy) GetDenom() string { return v.Denom }

// GetSeller returns GetCollectionActivitiesActionsActionBuy.Seller, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionBuy) GetSeller() string { return v.Seller }

// GetCollectionActivitiesActionsActionList includes the requested fields of the GraphQL type List.
type GetCollectionActivitiesActionsActionList struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns GetCollectionActivitiesActionsActionList.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionList) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionActivitiesActionsActionList.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionList) GetDenom() string { return v.Denom }

// GetCollectionActivitiesActionsActionNft includes the requested fields of the GraphQL type Nft.
type GetCollectionActivitiesActionsActionNft struct {
	Id       string                                          `json:"id"`
	TokenURI string                                          `json:"tokenURI"`
	Contract GetCollectionActivitiesActionsActionNftContract `json:"contract"`
}

// GetId returns GetCollectionActivitiesActionsActionNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNft) GetId() string { return v.Id }

// GetTokenURI returns GetCollectionActivitiesActionsActionNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNft) GetTokenURI() string { return v.TokenURI }

// GetContract returns GetCollectionActivitiesActionsActionNft.Contract, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNft) GetContract() GetCollectionActivitiesActionsActionNftContract {
	return v.Contract
}

// GetCollectionActivitiesActionsActionNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionActivitiesActionsActionNftContract struct {
	Minter string `json:"minter"`
	Id     string `json:"id"`
	Name   string `json:"name"`
}

// GetMinter returns GetCollectionActivitiesActionsActionNftContract.Minter, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNftContract) GetMinter() string { return v.Minter }

// GetId returns GetCollectionActivitiesActionsActionNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNftContract) GetId() string { return v.Id }

// GetName returns GetCollectionActivitiesActionsActionNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNftContract) GetName() string { return v.Name }

// GetCollectionActivitiesResponse is returned by GetCollectionActivities on success.
type GetCollectionActivitiesResponse struct {
	Actions []GetCollectionActivitiesActionsAction `json:"actions"`
}

// GetActions returns GetCollectionActivitiesResponse.Actions, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesResponse) GetActions() []GetCollectionActivitiesActionsAction {
	return v.Actions
}

// GetCollectionNFTsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionNFTsNftContractsNftContract struct {
	Id     string                                            `json:"id"`
	Name   string                                            `json:"name"`
	Symbol string                                            `json:"symbol"`
	Nfts   []GetCollectionNFTsNftContractsNftContractNftsNft `json:"nfts"`
}

// GetId returns GetCollectionNFTsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetId() string { return v.Id }

// GetName returns GetCollectionNFTsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetName() string { return v.Name }

// GetSymbol returns GetCollectionNFTsNftContractsNftContract.Symbol, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetSymbol() string { return v.Symbol }

// GetNfts returns GetCollectionNFTsNftContractsNftContract.Nfts, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContract) GetNfts() []GetCollectionNFTsNftContractsNftContractNftsNft {
	return v.Nfts
}

// GetCollectionNFTsNftContractsNftContractNftsNft includes the requested fields of the GraphQL type Nft.
type GetCollectionNFTsNftContractsNftContractNftsNft struct {
	Id             string `json:"id"`
	TokenID        string `json:"tokenID"`
	Owner          string `json:"owner"`
	Seller         string `json:"seller"`
	CreatorName    string `json:"creatorName"`
	CreatorAddress string `json:"creatorAddress"`
	TokenURI       string `json:"tokenURI"`
	InSale         bool   `json:"inSale"`
	Price          string `json:"price"`
	Denom          string `json:"denom"`
	CreatedAt      string `json:"createdAt"`
	RemovedAt      string `json:"removedAt"`
}

// GetId returns GetCollectionNFTsNftContractsNftContractNftsNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetId() string { return v.Id }

// GetTokenID returns GetCollectionNFTsNftContractsNftContractNftsNft.TokenID, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetTokenID() string { return v.TokenID }

// GetOwner returns GetCollectionNFTsNftContractsNftContractNftsNft.Owner, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetOwner() string { return v.Owner }

// GetSeller returns GetCollectionNFTsNftContractsNftContractNftsNft.Seller, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetSeller() string { return v.Seller }

// GetCreatorName returns GetCollectionNFTsNftContractsNftContractNftsNft.CreatorName, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetCreatorName() string {
	return v.CreatorName
}

// GetCreatorAddress returns GetCollectionNFTsNftContractsNftContractNftsNft.CreatorAddress, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetCreatorAddress() string {
	return v.CreatorAddress
}

// GetTokenURI returns GetCollectionNFTsNftContractsNftContractNftsNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetTokenURI() string { return v.TokenURI }

// GetInSale returns GetCollectionNFTsNftContractsNftContractNftsNft.InSale, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetInSale() bool { return v.InSale }

// GetPrice returns GetCollectionNFTsNftContractsNftContractNftsNft.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionNFTsNftContractsNftContractNftsNft.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetCollectionNFTsNftContractsNftContractNftsNft.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetCreatedAt() string { return v.CreatedAt }

// GetRemovedAt returns GetCollectionNFTsNftContractsNftContractNftsNft.RemovedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftContractsNftContractNftsNft) GetRemovedAt() string { return v.RemovedAt }

// GetCollectionNFTsResponse is returned by GetCollectionNFTs on success.
type GetCollectionNFTsResponse struct {
	NftContracts []GetCollectionNFTsNftContractsNftContract `json:"nftContracts"`
}

// GetNftContracts returns GetCollectionNFTsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsResponse) GetNftContracts() []GetCollectionNFTsNftContractsNftContract {
	return v.NftContracts
}

// GetCollectionStatsBuysBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionStatsBuysBuy struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns GetCollectionStatsBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsBuysBuy) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionStatsBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsBuysBuy) GetDenom() string { return v.Denom }

// GetCollectionStatsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionStatsNftContractsNftContract struct {
	Id     string                                             `json:"id"`
	Name   string                                             `json:"name"`
	Symbol string                                             `json:"symbol"`
	Nfts   []GetCollectionStatsNftContractsNftContractNftsNft `json:"nfts"`
}

// GetId returns GetCollectionStatsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetId() string { return v.Id }

// GetName returns GetCollectionStatsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetName() string { return v.Name }

// GetSymbol returns GetCollectionStatsNftContractsNftContract.Symbol, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetSymbol() string { return v.Symbol }

// GetNfts returns GetCollectionStatsNftContractsNftContract.Nfts, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContract) GetNfts() []GetCollectionStatsNftContractsNftContractNftsNft {
	return v.Nfts
}

// GetCollectionStatsNftContractsNftContractNftsNft includes the requested fields of the GraphQL type Nft.
type GetCollectionStatsNftContractsNftContractNftsNft struct {
	Id             string `json:"id"`
	Owner          string `json:"owner"`
	CreatorName    string `json:"creatorName"`
	CreatorAddress string `json:"creatorAddress"`
	TokenURI       string `json:"tokenURI"`
	InSale         bool   `json:"inSale"`
	Price          string `json:"price"`
	Denom          string `json:"denom"`
	CreatedAt      string `json:"createdAt"`
}

// GetId returns GetCollectionStatsNftContractsNftContractNftsNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetId() string { return v.Id }

// GetOwner returns GetCollectionStatsNftContractsNftContractNftsNft.Owner, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetOwner() string { return v.Owner }

// GetCreatorName returns GetCollectionStatsNftContractsNftContractNftsNft.CreatorName, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetCreatorName() string {
	return v.CreatorName
}

// GetCreatorAddress returns GetCollectionStatsNftContractsNftContractNftsNft.CreatorAddress, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetCreatorAddress() string {
	return v.CreatorAddress
}

// GetTokenURI returns GetCollectionStatsNftContractsNftContractNftsNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetTokenURI() string { return v.TokenURI }

// GetInSale returns GetCollectionStatsNftContractsNftContractNftsNft.InSale, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetInSale() bool { return v.InSale }

// GetPrice returns GetCollectionStatsNftContractsNftContractNftsNft.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionStatsNftContractsNftContractNftsNft.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetCollectionStatsNftContractsNftContractNftsNft.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftContractsNftContractNftsNft) GetCreatedAt() string { return v.CreatedAt }

// GetCollectionStatsResponse is returned by GetCollectionStats on success.
type GetCollectionStatsResponse struct {
	NftContracts []GetCollectionStatsNftContractsNftContract `json:"nftContracts"`
	Buys         []GetCollectionStatsBuysBuy                 `json:"buys"`
}

// GetNftContracts returns GetCollectionStatsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsResponse) GetNftContracts() []GetCollectionStatsNftContractsNftContract {
	return v.NftContracts
}

// GetBuys returns GetCollectionStatsResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsResponse) GetBuys() []GetCollectionStatsBuysBuy { return v.Buys }

// GetCollectionsBuysBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionsBuysBuy struct {
	Id    string                   `json:"id"`
	Nft   GetCollectionsBuysBuyNft `json:"nft"`
	Denom string                   `json:"denom"`
	Price string                   `json:"price"`
}

// GetId returns GetCollectionsBuysBuy.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetId() string { return v.Id }

// GetNft returns GetCollectionsBuysBuy.Nft, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetNft() GetCollectionsBuysBuyNft { return v.Nft }

// GetDenom returns GetCollectionsBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetDenom() string { return v.Denom }

// GetPrice returns GetCollectionsBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetPrice() string { return v.Price }

// GetCollectionsBuysBuyNft includes the requested fields of the GraphQL type Nft.
type GetCollectionsBuysBuyNft struct {
	Id       string                           `json:"id"`
	Contract GetCollectionsBuysBuyNftContract `json:"contract"`
}

// GetId returns GetCollectionsBuysBuyNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNft) GetId() string { return v.Id }

// GetContract returns GetCollectionsBuysBuyNft.Contract, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNft) GetContract() GetCollectionsBuysBuyNftContract { return v.Contract }

// GetCollectionsBuysBuyNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionsBuysBuyNftContract struct {
	Id string `json:"id"`
}

// GetId returns GetCollectionsBuysBuyNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNftContract) GetId() string { return v.Id }

// GetCollectionsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionsNftContractsNftContract struct {
	Id        string `json:"id"`
	Supported bool   `json:"supported"`
	Name      string `json:"name"`
	Minter    string `json:"minter"`
}

// GetId returns GetCollectionsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetId() string { return v.Id }

// GetSupported returns GetCollectionsNftContractsNftContract.Supported, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetSupported() bool { return v.Supported }

// GetName returns GetCollectionsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetName() string { return v.Name }

// GetMinter returns GetCollectionsNftContractsNftContract.Minter, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetMinter() string { return v.Minter }

// GetCollectionsResponse is returned by GetCollections on success.
type GetCollectionsResponse struct {
	NftContracts []GetCollectionsNftContractsNftContract `json:"nftContracts"`
	Buys         []GetCollectionsBuysBuy                 `json:"buys"`
}

// GetNftContracts returns GetCollectionsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionsResponse) GetNftContracts() []GetCollectionsNftContractsNftContract {
	return v.NftContracts
}

// GetBuys returns GetCollectionsResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetCollectionsResponse) GetBuys() []GetCollectionsBuysBuy { return v.Buys }

// GetNFTActivitiesActionsAction includes the requested fields of the GraphQL type Action.
type GetNFTActivitiesActionsAction struct {
	Id        string                            `json:"id"`
	Nft       GetNFTActivitiesActionsActionNft  `json:"nft"`
	Buy       GetNFTActivitiesActionsActionBuy  `json:"buy"`
	List      GetNFTActivitiesActionsActionList `json:"list"`
	Action    string                            `json:"action"`
	Actor     string                            `json:"actor"`
	TxID      string                            `json:"txID"`
	CreatedAt string                            `json:"createdAt"`
}

// GetId returns GetNFTActivitiesActionsAction.Id, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetId() string { return v.Id }

// GetNft returns GetNFTActivitiesActionsAction.Nft, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetNft() GetNFTActivitiesActionsActionNft { return v.Nft }

// GetBuy returns GetNFTActivitiesActionsAction.Buy, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetBuy() GetNFTActivitiesActionsActionBuy { return v.Buy }

// GetList returns GetNFTActivitiesActionsAction.List, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetList() GetNFTActivitiesActionsActionList { return v.List }

// GetAction returns GetNFTActivitiesActionsAction.Action, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetAction() string { return v.Action }

// GetActor returns GetNFTActivitiesActionsAction.Actor, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetActor() string { return v.Actor }

// GetTxID returns GetNFTActivitiesActionsAction.TxID, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetTxID() string { return v.TxID }

// GetCreatedAt returns GetNFTActivitiesActionsAction.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsAction) GetCreatedAt() string { return v.CreatedAt }

// GetNFTActivitiesActionsActionBuy includes the requested fields of the GraphQL type Buy.
type GetNFTActivitiesActionsActionBuy struct {
	Price  string `json:"price"`
	Denom  string `json:"denom"`
	Seller string `json:"seller"`
}

// GetPrice returns GetNFTActivitiesActionsActionBuy.Price, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionBuy) GetPrice() string { return v.Price }

// GetDenom returns GetNFTActivitiesActionsActionBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionBuy) GetDenom() string { return v.Denom }

// GetSeller returns GetNFTActivitiesActionsActionBuy.Seller, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionBuy) GetSeller() string { return v.Seller }

// GetNFTActivitiesActionsActionList includes the requested fields of the GraphQL type List.
type GetNFTActivitiesActionsActionList struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns GetNFTActivitiesActionsActionList.Price, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionList) GetPrice() string { return v.Price }

// GetDenom returns GetNFTActivitiesActionsActionList.Denom, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionList) GetDenom() string { return v.Denom }

// GetNFTActivitiesActionsActionNft includes the requested fields of the GraphQL type Nft.
type GetNFTActivitiesActionsActionNft struct {
	Id       string                                   `json:"id"`
	TokenURI string                                   `json:"tokenURI"`
	Contract GetNFTActivitiesActionsActionNftContract `json:"contract"`
}

// GetId returns GetNFTActivitiesActionsActionNft.Id, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionNft) GetId() string { return v.Id }

// GetTokenURI returns GetNFTActivitiesActionsActionNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionNft) GetTokenURI() string { return v.TokenURI }

// GetContract returns GetNFTActivitiesActionsActionNft.Contract, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionNft) GetContract() GetNFTActivitiesActionsActionNftContract {
	return v.Contract
}

// GetNFTActivitiesActionsActionNftContract includes the requested fields of the GraphQL type NftContract.
type GetNFTActivitiesActionsActionNftContract struct {
	Minter string `json:"minter"`
	Id     string `json:"id"`
	Name   string `json:"name"`
}

// GetMinter returns GetNFTActivitiesActionsActionNftContract.Minter, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionNftContract) GetMinter() string { return v.Minter }

// GetId returns GetNFTActivitiesActionsActionNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionNftContract) GetId() string { return v.Id }

// GetName returns GetNFTActivitiesActionsActionNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesActionsActionNftContract) GetName() string { return v.Name }

// GetNFTActivitiesResponse is returned by GetNFTActivities on success.
type GetNFTActivitiesResponse struct {
	Actions []GetNFTActivitiesActionsAction `json:"actions"`
}

// GetActions returns GetNFTActivitiesResponse.Actions, and is useful for accessing the field via an interface.
func (v *GetNFTActivitiesResponse) GetActions() []GetNFTActivitiesActionsAction { return v.Actions }

// GetNFTPriceHistoryBuysBuy includes the requested fields of the GraphQL type Buy.
type GetNFTPriceHistoryBuysBuy struct {
	Price     string `json:"price"`
	Denom     string `json:"denom"`
	CreatedAt string `json:"createdAt"`
}

// GetPrice returns GetNFTPriceHistoryBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetPrice() string { return v.Price }

// GetDenom returns GetNFTPriceHistoryBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetNFTPriceHistoryBuysBuy.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetCreatedAt() string { return v.CreatedAt }

// GetNFTPriceHistoryResponse is returned by GetNFTPriceHistory on success.
type GetNFTPriceHistoryResponse struct {
	Buys []GetNFTPriceHistoryBuysBuy `json:"buys"`
}

// GetBuys returns GetNFTPriceHistoryResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryResponse) GetBuys() []GetNFTPriceHistoryBuysBuy { return v.Buys }

// __GetCollectionActivitiesInput is used internally by genqlient
type __GetCollectionActivitiesInput struct {
	Minter string `json:"minter"`
	Limit  int    `json:"Limit"`
	Offset int    `json:"Offset"`
}

// GetMinter returns __GetCollectionActivitiesInput.Minter, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetMinter() string { return v.Minter }

// GetLimit returns __GetCollectionActivitiesInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetCollectionActivitiesInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetOffset() int { return v.Offset }

// __GetCollectionNFTsInput is used internally by genqlient
type __GetCollectionNFTsInput struct {
	Minter string `json:"minter"`
	Limit  int    `json:"Limit"`
	Offset int    `json:"Offset"`
}

// GetMinter returns __GetCollectionNFTsInput.Minter, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetMinter() string { return v.Minter }

// GetLimit returns __GetCollectionNFTsInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetCollectionNFTsInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetOffset() int { return v.Offset }

// __GetCollectionStatsInput is used internally by genqlient
type __GetCollectionStatsInput struct {
	Minter string `json:"minter"`
}

// GetMinter returns __GetCollectionStatsInput.Minter, and is useful for accessing the field via an interface.
func (v *__GetCollectionStatsInput) GetMinter() string { return v.Minter }

// __GetCollectionsInput is used internally by genqlient
type __GetCollectionsInput struct {
	From string `json:"from"`
}

// GetFrom returns __GetCollectionsInput.From, and is useful for accessing the field via an interface.
func (v *__GetCollectionsInput) GetFrom() string { return v.From }

// __GetNFTActivitiesInput is used internally by genqlient
type __GetNFTActivitiesInput struct {
	NftID  string `json:"nftID"`
	Limit  int    `json:"Limit"`
	Offset int    `json:"Offset"`
}

// GetNftID returns __GetNFTActivitiesInput.NftID, and is useful for accessing the field via an interface.
func (v *__GetNFTActivitiesInput) GetNftID() string { return v.NftID }

// GetLimit returns __GetNFTActivitiesInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetNFTActivitiesInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetNFTActivitiesInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetNFTActivitiesInput) GetOffset() int { return v.Offset }

// __GetNFTPriceHistoryInput is used internally by genqlient
type __GetNFTPriceHistoryInput struct {
	Nft string `json:"nft"`
}

// GetNft returns __GetNFTPriceHistoryInput.Nft, and is useful for accessing the field via an interface.
func (v *__GetNFTPriceHistoryInput) GetNft() string { return v.Nft }

func GetCollectionActivities(
	ctx context.Context,
	client graphql.Client,
	minter string,
	Limit int,
	Offset int,
) (*GetCollectionActivitiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionActivities",
		Query: `
query GetCollectionActivities ($minter: Bytes!, $Limit: Int!, $Offset: Int!) {
	actions(where: {minter:$minter}, first: $Limit, skip: $Offset) {
		id
		nft {
			id
			tokenURI
			contract {
				minter
				id
				name
			}
		}
		buy {
			price
			denom
			seller
		}
		list {
			price
			denom
		}
		action
		actor
		txID
		createdAt
	}
}
`,
		Variables: &__GetCollectionActivitiesInput{
			Minter: minter,
			Limit:  Limit,
			Offset: Offset,
		},
	}
	var err error

	var data GetCollectionActivitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollectionNFTs(
	ctx context.Context,
	client graphql.Client,
	minter string,
	Limit int,
	Offset int,
) (*GetCollectionNFTsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionNFTs",
		Query: `
query GetCollectionNFTs ($minter: Bytes!, $Limit: Int!, $Offset: Int!) {
	nftContracts(where: {minter:$minter}, first: $Limit, skip: $Offset) {
		id
		name
		symbol
		nfts(first: $Limit, skip: $Offset) {
			id
			tokenID
			owner
			seller
			creatorName
			creatorAddress
			tokenURI
			inSale
			price
			denom
			createdAt
			removedAt
		}
	}
}
`,
		Variables: &__GetCollectionNFTsInput{
			Minter: minter,
			Limit:  Limit,
			Offset: Offset,
		},
	}
	var err error

	var data GetCollectionNFTsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollectionStats(
	ctx context.Context,
	client graphql.Client,
	minter string,
) (*GetCollectionStatsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionStats",
		Query: `
query GetCollectionStats ($minter: Bytes!) {
	nftContracts(where: {minter:$minter}) {
		id
		name
		symbol
		nfts {
			id
			owner
			creatorName
			creatorAddress
			tokenURI
			inSale
			price
			denom
			createdAt
		}
	}
	buys(where: {minter:$minter}) {
		price
		denom
	}
}
`,
		Variables: &__GetCollectionStatsInput{
			Minter: minter,
		},
	}
	var err error

	var data GetCollectionStatsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollections(
	ctx context.Context,
	client graphql.Client,
	from string,
) (*GetCollectionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollections",
		Query: `
query GetCollections ($from: BigInt!) {
	nftContracts {
		id
		supported
		name
		minter
	}
	buys(where: {createdAt_gt:$from}) {
		id
		nft {
			id
			contract {
				id
			}
		}
		denom
		price
	}
}
`,
		Variables: &__GetCollectionsInput{
			From: from,
		},
	}
	var err error

	var data GetCollectionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNFTActivities(
	ctx context.Context,
	client graphql.Client,
	nftID string,
	Limit int,
	Offset int,
) (*GetNFTActivitiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetNFTActivities",
		Query: `
query GetNFTActivities ($nftID: String!, $Limit: Int!, $Offset: Int!) {
	actions(where: {nft:$nftID}, first: $Limit, skip: $Offset) {
		id
		nft {
			id
			tokenURI
			contract {
				minter
				id
				name
			}
		}
		buy {
			price
			denom
			seller
		}
		list {
			price
			denom
		}
		action
		actor
		txID
		createdAt
	}
}
`,
		Variables: &__GetNFTActivitiesInput{
			NftID:  nftID,
			Limit:  Limit,
			Offset: Offset,
		},
	}
	var err error

	var data GetNFTActivitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNFTPriceHistory(
	ctx context.Context,
	client graphql.Client,
	nft string,
) (*GetNFTPriceHistoryResponse, error) {
	req := &graphql.Request{
		OpName: "GetNFTPriceHistory",
		Query: `
query GetNFTPriceHistory ($nft: String!) {
	buys(where: {nft:$nft}) {
		price
		denom
		createdAt
	}
}
`,
		Variables: &__GetNFTPriceHistoryInput{
			Nft: nft,
		},
	}
	var err error

	var data GetNFTPriceHistoryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
