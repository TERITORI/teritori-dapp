// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package thegraph

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetCollectionActivitiesActionsAction includes the requested fields of the GraphQL type Action.
type GetCollectionActivitiesActionsAction struct {
	Id        string                                   `json:"id"`
	Nft       GetCollectionActivitiesActionsActionNft  `json:"nft"`
	Buy       GetCollectionActivitiesActionsActionBuy  `json:"buy"`
	List      GetCollectionActivitiesActionsActionList `json:"list"`
	Action    string                                   `json:"action"`
	Actor     string                                   `json:"actor"`
	CreatedAt string                                   `json:"createdAt"`
}

// GetId returns GetCollectionActivitiesActionsAction.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetId() string { return v.Id }

// GetNft returns GetCollectionActivitiesActionsAction.Nft, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetNft() GetCollectionActivitiesActionsActionNft {
	return v.Nft
}

// GetBuy returns GetCollectionActivitiesActionsAction.Buy, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetBuy() GetCollectionActivitiesActionsActionBuy {
	return v.Buy
}

// GetList returns GetCollectionActivitiesActionsAction.List, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetList() GetCollectionActivitiesActionsActionList {
	return v.List
}

// GetAction returns GetCollectionActivitiesActionsAction.Action, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetAction() string { return v.Action }

// GetActor returns GetCollectionActivitiesActionsAction.Actor, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetActor() string { return v.Actor }

// GetCreatedAt returns GetCollectionActivitiesActionsAction.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsAction) GetCreatedAt() string { return v.CreatedAt }

// GetCollectionActivitiesActionsActionBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionActivitiesActionsActionBuy struct {
	Price  string `json:"price"`
	Denom  string `json:"denom"`
	Seller string `json:"seller"`
}

// GetPrice returns GetCollectionActivitiesActionsActionBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionBuy) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionActivitiesActionsActionBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionBuy) GetDenom() string { return v.Denom }

// GetSeller returns GetCollectionActivitiesActionsActionBuy.Seller, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionBuy) GetSeller() string { return v.Seller }

// GetCollectionActivitiesActionsActionList includes the requested fields of the GraphQL type List.
type GetCollectionActivitiesActionsActionList struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns GetCollectionActivitiesActionsActionList.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionList) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionActivitiesActionsActionList.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionList) GetDenom() string { return v.Denom }

// GetCollectionActivitiesActionsActionNft includes the requested fields of the GraphQL type Nft.
type GetCollectionActivitiesActionsActionNft struct {
	Id       string                                          `json:"id"`
	TokenURI string                                          `json:"tokenURI"`
	Contract GetCollectionActivitiesActionsActionNftContract `json:"contract"`
}

// GetId returns GetCollectionActivitiesActionsActionNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNft) GetId() string { return v.Id }

// GetTokenURI returns GetCollectionActivitiesActionsActionNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNft) GetTokenURI() string { return v.TokenURI }

// GetContract returns GetCollectionActivitiesActionsActionNft.Contract, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNft) GetContract() GetCollectionActivitiesActionsActionNftContract {
	return v.Contract
}

// GetCollectionActivitiesActionsActionNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionActivitiesActionsActionNftContract struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetCollectionActivitiesActionsActionNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNftContract) GetId() string { return v.Id }

// GetName returns GetCollectionActivitiesActionsActionNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesActionsActionNftContract) GetName() string { return v.Name }

// GetCollectionActivitiesResponse is returned by GetCollectionActivities on success.
type GetCollectionActivitiesResponse struct {
	Actions []GetCollectionActivitiesActionsAction `json:"actions"`
}

// GetActions returns GetCollectionActivitiesResponse.Actions, and is useful for accessing the field via an interface.
func (v *GetCollectionActivitiesResponse) GetActions() []GetCollectionActivitiesActionsAction {
	return v.Actions
}

// GetCollectionNFTsNftsNft includes the requested fields of the GraphQL type Nft.
type GetCollectionNFTsNftsNft struct {
	Id             string                           `json:"id"`
	TokenID        string                           `json:"tokenID"`
	Owner          string                           `json:"owner"`
	CreatorName    string                           `json:"creatorName"`
	CreatorAddress string                           `json:"creatorAddress"`
	TokenURI       string                           `json:"tokenURI"`
	InSale         bool                             `json:"inSale"`
	Price          string                           `json:"price"`
	Denom          string                           `json:"denom"`
	CreatedAt      string                           `json:"createdAt"`
	RemovedAt      string                           `json:"removedAt"`
	Contract       GetCollectionNFTsNftsNftContract `json:"contract"`
}

// GetId returns GetCollectionNFTsNftsNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetId() string { return v.Id }

// GetTokenID returns GetCollectionNFTsNftsNft.TokenID, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetTokenID() string { return v.TokenID }

// GetOwner returns GetCollectionNFTsNftsNft.Owner, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetOwner() string { return v.Owner }

// GetCreatorName returns GetCollectionNFTsNftsNft.CreatorName, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetCreatorName() string { return v.CreatorName }

// GetCreatorAddress returns GetCollectionNFTsNftsNft.CreatorAddress, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetCreatorAddress() string { return v.CreatorAddress }

// GetTokenURI returns GetCollectionNFTsNftsNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetTokenURI() string { return v.TokenURI }

// GetInSale returns GetCollectionNFTsNftsNft.InSale, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetInSale() bool { return v.InSale }

// GetPrice returns GetCollectionNFTsNftsNft.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionNFTsNftsNft.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetCollectionNFTsNftsNft.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetCreatedAt() string { return v.CreatedAt }

// GetRemovedAt returns GetCollectionNFTsNftsNft.RemovedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetRemovedAt() string { return v.RemovedAt }

// GetContract returns GetCollectionNFTsNftsNft.Contract, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNft) GetContract() GetCollectionNFTsNftsNftContract { return v.Contract }

// GetCollectionNFTsNftsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionNFTsNftsNftContract struct {
	Name string `json:"name"`
}

// GetName returns GetCollectionNFTsNftsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsNftsNftContract) GetName() string { return v.Name }

// GetCollectionNFTsResponse is returned by GetCollectionNFTs on success.
type GetCollectionNFTsResponse struct {
	Nfts []GetCollectionNFTsNftsNft `json:"nfts"`
}

// GetNfts returns GetCollectionNFTsResponse.Nfts, and is useful for accessing the field via an interface.
func (v *GetCollectionNFTsResponse) GetNfts() []GetCollectionNFTsNftsNft { return v.Nfts }

// GetCollectionStatsBuysBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionStatsBuysBuy struct {
	Price string `json:"price"`
	Denom string `json:"denom"`
}

// GetPrice returns GetCollectionStatsBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsBuysBuy) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionStatsBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsBuysBuy) GetDenom() string { return v.Denom }

// GetCollectionStatsNftsNft includes the requested fields of the GraphQL type Nft.
type GetCollectionStatsNftsNft struct {
	Id             string `json:"id"`
	Owner          string `json:"owner"`
	CreatorName    string `json:"creatorName"`
	CreatorAddress string `json:"creatorAddress"`
	TokenURI       string `json:"tokenURI"`
	InSale         bool   `json:"inSale"`
	Price          string `json:"price"`
	Denom          string `json:"denom"`
	CreatedAt      string `json:"createdAt"`
}

// GetId returns GetCollectionStatsNftsNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetId() string { return v.Id }

// GetOwner returns GetCollectionStatsNftsNft.Owner, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetOwner() string { return v.Owner }

// GetCreatorName returns GetCollectionStatsNftsNft.CreatorName, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetCreatorName() string { return v.CreatorName }

// GetCreatorAddress returns GetCollectionStatsNftsNft.CreatorAddress, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetCreatorAddress() string { return v.CreatorAddress }

// GetTokenURI returns GetCollectionStatsNftsNft.TokenURI, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetTokenURI() string { return v.TokenURI }

// GetInSale returns GetCollectionStatsNftsNft.InSale, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetInSale() bool { return v.InSale }

// GetPrice returns GetCollectionStatsNftsNft.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetPrice() string { return v.Price }

// GetDenom returns GetCollectionStatsNftsNft.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetCollectionStatsNftsNft.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsNftsNft) GetCreatedAt() string { return v.CreatedAt }

// GetCollectionStatsResponse is returned by GetCollectionStats on success.
type GetCollectionStatsResponse struct {
	Nfts []GetCollectionStatsNftsNft `json:"nfts"`
	Buys []GetCollectionStatsBuysBuy `json:"buys"`
}

// GetNfts returns GetCollectionStatsResponse.Nfts, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsResponse) GetNfts() []GetCollectionStatsNftsNft { return v.Nfts }

// GetBuys returns GetCollectionStatsResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetCollectionStatsResponse) GetBuys() []GetCollectionStatsBuysBuy { return v.Buys }

// GetCollectionsBuysBuy includes the requested fields of the GraphQL type Buy.
type GetCollectionsBuysBuy struct {
	Id    string                   `json:"id"`
	Nft   GetCollectionsBuysBuyNft `json:"nft"`
	Denom string                   `json:"denom"`
	Price string                   `json:"price"`
}

// GetId returns GetCollectionsBuysBuy.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetId() string { return v.Id }

// GetNft returns GetCollectionsBuysBuy.Nft, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetNft() GetCollectionsBuysBuyNft { return v.Nft }

// GetDenom returns GetCollectionsBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetDenom() string { return v.Denom }

// GetPrice returns GetCollectionsBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuy) GetPrice() string { return v.Price }

// GetCollectionsBuysBuyNft includes the requested fields of the GraphQL type Nft.
type GetCollectionsBuysBuyNft struct {
	Id       string                           `json:"id"`
	Contract GetCollectionsBuysBuyNftContract `json:"contract"`
}

// GetId returns GetCollectionsBuysBuyNft.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNft) GetId() string { return v.Id }

// GetContract returns GetCollectionsBuysBuyNft.Contract, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNft) GetContract() GetCollectionsBuysBuyNftContract { return v.Contract }

// GetCollectionsBuysBuyNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionsBuysBuyNftContract struct {
	Id string `json:"id"`
}

// GetId returns GetCollectionsBuysBuyNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsBuysBuyNftContract) GetId() string { return v.Id }

// GetCollectionsNftContractsNftContract includes the requested fields of the GraphQL type NftContract.
type GetCollectionsNftContractsNftContract struct {
	Id        string `json:"id"`
	Supported bool   `json:"supported"`
	Name      string `json:"name"`
}

// GetId returns GetCollectionsNftContractsNftContract.Id, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetId() string { return v.Id }

// GetSupported returns GetCollectionsNftContractsNftContract.Supported, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetSupported() bool { return v.Supported }

// GetName returns GetCollectionsNftContractsNftContract.Name, and is useful for accessing the field via an interface.
func (v *GetCollectionsNftContractsNftContract) GetName() string { return v.Name }

// GetCollectionsResponse is returned by GetCollections on success.
type GetCollectionsResponse struct {
	NftContracts []GetCollectionsNftContractsNftContract `json:"nftContracts"`
	Buys         []GetCollectionsBuysBuy                 `json:"buys"`
}

// GetNftContracts returns GetCollectionsResponse.NftContracts, and is useful for accessing the field via an interface.
func (v *GetCollectionsResponse) GetNftContracts() []GetCollectionsNftContractsNftContract {
	return v.NftContracts
}

// GetBuys returns GetCollectionsResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetCollectionsResponse) GetBuys() []GetCollectionsBuysBuy { return v.Buys }

// GetNFTPriceHistoryBuysBuy includes the requested fields of the GraphQL type Buy.
type GetNFTPriceHistoryBuysBuy struct {
	Price     string `json:"price"`
	Denom     string `json:"denom"`
	CreatedAt string `json:"createdAt"`
}

// GetPrice returns GetNFTPriceHistoryBuysBuy.Price, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetPrice() string { return v.Price }

// GetDenom returns GetNFTPriceHistoryBuysBuy.Denom, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetDenom() string { return v.Denom }

// GetCreatedAt returns GetNFTPriceHistoryBuysBuy.CreatedAt, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryBuysBuy) GetCreatedAt() string { return v.CreatedAt }

// GetNFTPriceHistoryResponse is returned by GetNFTPriceHistory on success.
type GetNFTPriceHistoryResponse struct {
	Buys []GetNFTPriceHistoryBuysBuy `json:"buys"`
}

// GetBuys returns GetNFTPriceHistoryResponse.Buys, and is useful for accessing the field via an interface.
func (v *GetNFTPriceHistoryResponse) GetBuys() []GetNFTPriceHistoryBuysBuy { return v.Buys }

// __GetCollectionActivitiesInput is used internally by genqlient
type __GetCollectionActivitiesInput struct {
	Contract string `json:"contract"`
	Limit    int    `json:"Limit"`
	Offset   int    `json:"Offset"`
}

// GetContract returns __GetCollectionActivitiesInput.Contract, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetContract() string { return v.Contract }

// GetLimit returns __GetCollectionActivitiesInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetCollectionActivitiesInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetCollectionActivitiesInput) GetOffset() int { return v.Offset }

// __GetCollectionNFTsInput is used internally by genqlient
type __GetCollectionNFTsInput struct {
	Contract string `json:"contract"`
	Limit    int    `json:"Limit"`
	Offset   int    `json:"Offset"`
}

// GetContract returns __GetCollectionNFTsInput.Contract, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetContract() string { return v.Contract }

// GetLimit returns __GetCollectionNFTsInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetCollectionNFTsInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetCollectionNFTsInput) GetOffset() int { return v.Offset }

// __GetCollectionStatsInput is used internally by genqlient
type __GetCollectionStatsInput struct {
	Contract string `json:"contract"`
}

// GetContract returns __GetCollectionStatsInput.Contract, and is useful for accessing the field via an interface.
func (v *__GetCollectionStatsInput) GetContract() string { return v.Contract }

// __GetCollectionsInput is used internally by genqlient
type __GetCollectionsInput struct {
	From string `json:"from"`
}

// GetFrom returns __GetCollectionsInput.From, and is useful for accessing the field via an interface.
func (v *__GetCollectionsInput) GetFrom() string { return v.From }

// __GetNFTPriceHistoryInput is used internally by genqlient
type __GetNFTPriceHistoryInput struct {
	Nft    string `json:"nft"`
	Limit  int    `json:"Limit"`
	Offset int    `json:"Offset"`
}

// GetNft returns __GetNFTPriceHistoryInput.Nft, and is useful for accessing the field via an interface.
func (v *__GetNFTPriceHistoryInput) GetNft() string { return v.Nft }

// GetLimit returns __GetNFTPriceHistoryInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetNFTPriceHistoryInput) GetLimit() int { return v.Limit }

// GetOffset returns __GetNFTPriceHistoryInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetNFTPriceHistoryInput) GetOffset() int { return v.Offset }

func GetCollectionActivities(
	ctx context.Context,
	client graphql.Client,
	contract string,
	Limit int,
	Offset int,
) (*GetCollectionActivitiesResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionActivities",
		Query: `
query GetCollectionActivities ($contract: String!, $Limit: Int!, $Offset: Int!) {
	actions(where: {nft:$contract}, first: $Limit, skip: $Offset) {
		id
		nft {
			id
			tokenURI
			contract {
				id
				name
			}
		}
		buy {
			price
			denom
			seller
		}
		list {
			price
			denom
		}
		action
		actor
		createdAt
	}
}
`,
		Variables: &__GetCollectionActivitiesInput{
			Contract: contract,
			Limit:    Limit,
			Offset:   Offset,
		},
	}
	var err error

	var data GetCollectionActivitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollectionNFTs(
	ctx context.Context,
	client graphql.Client,
	contract string,
	Limit int,
	Offset int,
) (*GetCollectionNFTsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionNFTs",
		Query: `
query GetCollectionNFTs ($contract: String!, $Limit: Int!, $Offset: Int!) {
	nfts(where: {contract:$contract}, first: $Limit, skip: $Offset) {
		id
		tokenID
		owner
		creatorName
		creatorAddress
		tokenURI
		inSale
		price
		denom
		createdAt
		removedAt
		contract {
			name
		}
	}
}
`,
		Variables: &__GetCollectionNFTsInput{
			Contract: contract,
			Limit:    Limit,
			Offset:   Offset,
		},
	}
	var err error

	var data GetCollectionNFTsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollectionStats(
	ctx context.Context,
	client graphql.Client,
	contract string,
) (*GetCollectionStatsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollectionStats",
		Query: `
query GetCollectionStats ($contract: String!) {
	nfts(where: {contract:$contract}) {
		id
		owner
		creatorName
		creatorAddress
		tokenURI
		inSale
		price
		denom
		createdAt
	}
	buys(where: {nft:$contract}) {
		price
		denom
	}
}
`,
		Variables: &__GetCollectionStatsInput{
			Contract: contract,
		},
	}
	var err error

	var data GetCollectionStatsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetCollections(
	ctx context.Context,
	client graphql.Client,
	from string,
) (*GetCollectionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetCollections",
		Query: `
query GetCollections ($from: BigInt!) {
	nftContracts {
		id
		supported
		name
	}
	buys(where: {createdAt_gt:$from}) {
		id
		nft {
			id
			contract {
				id
			}
		}
		denom
		price
	}
}
`,
		Variables: &__GetCollectionsInput{
			From: from,
		},
	}
	var err error

	var data GetCollectionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetNFTPriceHistory(
	ctx context.Context,
	client graphql.Client,
	nft string,
	Limit int,
	Offset int,
) (*GetNFTPriceHistoryResponse, error) {
	req := &graphql.Request{
		OpName: "GetNFTPriceHistory",
		Query: `
query GetNFTPriceHistory ($nft: String!, $Limit: Int!, $Offset: Int!) {
	buys(where: {nft:$nft}, first: $Limit, skip: $Offset) {
		price
		denom
		createdAt
	}
}
`,
		Variables: &__GetNFTPriceHistoryInput{
			Nft:    nft,
			Limit:  Limit,
			Offset: Offset,
		},
	}
	var err error

	var data GetNFTPriceHistoryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
