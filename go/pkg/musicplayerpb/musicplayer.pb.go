// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: musicplayer/v1/musicplayer.proto

package musicplayerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllAlbumListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetAllAlbumListRequest) Reset() {
	*x = GetAllAlbumListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAlbumListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAlbumListRequest) ProtoMessage() {}

func (x *GetAllAlbumListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAlbumListRequest.ProtoReflect.Descriptor instead.
func (*GetAllAlbumListRequest) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllAlbumListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllAlbumListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetUserAlbumListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedBy string `protobuf:"bytes,1,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Limit     uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetUserAlbumListRequest) Reset() {
	*x = GetUserAlbumListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAlbumListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAlbumListRequest) ProtoMessage() {}

func (x *GetUserAlbumListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAlbumListRequest.ProtoReflect.Descriptor instead.
func (*GetUserAlbumListRequest) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserAlbumListRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *GetUserAlbumListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserAlbumListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetAlbumIdListForLibraryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetAlbumIdListForLibraryRequest) Reset() {
	*x = GetAlbumIdListForLibraryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumIdListForLibraryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumIdListForLibraryRequest) ProtoMessage() {}

func (x *GetAlbumIdListForLibraryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumIdListForLibraryRequest.ProtoReflect.Descriptor instead.
func (*GetAlbumIdListForLibraryRequest) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{2}
}

func (x *GetAlbumIdListForLibraryRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type GetOtherAlbumListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdList []string `protobuf:"bytes,1,rep,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	Limit  uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetOtherAlbumListRequest) Reset() {
	*x = GetOtherAlbumListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherAlbumListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherAlbumListRequest) ProtoMessage() {}

func (x *GetOtherAlbumListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherAlbumListRequest.ProtoReflect.Descriptor instead.
func (*GetOtherAlbumListRequest) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{3}
}

func (x *GetOtherAlbumListRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *GetOtherAlbumListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetOtherAlbumListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type MusicAlbumInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Metadata   string `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedBy  string `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *MusicAlbumInfo) Reset() {
	*x = MusicAlbumInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicAlbumInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicAlbumInfo) ProtoMessage() {}

func (x *MusicAlbumInfo) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicAlbumInfo.ProtoReflect.Descriptor instead.
func (*MusicAlbumInfo) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{4}
}

func (x *MusicAlbumInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *MusicAlbumInfo) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *MusicAlbumInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type AlbumLibraryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *AlbumLibraryInfo) Reset() {
	*x = AlbumLibraryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumLibraryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumLibraryInfo) ProtoMessage() {}

func (x *AlbumLibraryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumLibraryInfo.ProtoReflect.Descriptor instead.
func (*AlbumLibraryInfo) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{5}
}

func (x *AlbumLibraryInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type GetAllAlbumListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicAlbums []*MusicAlbumInfo `protobuf:"bytes,1,rep,name=music_albums,json=musicAlbums,proto3" json:"music_albums,omitempty"`
}

func (x *GetAllAlbumListResponse) Reset() {
	*x = GetAllAlbumListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAlbumListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAlbumListResponse) ProtoMessage() {}

func (x *GetAllAlbumListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAlbumListResponse.ProtoReflect.Descriptor instead.
func (*GetAllAlbumListResponse) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllAlbumListResponse) GetMusicAlbums() []*MusicAlbumInfo {
	if x != nil {
		return x.MusicAlbums
	}
	return nil
}

type GetUserAlbumListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicAlbums []*MusicAlbumInfo `protobuf:"bytes,1,rep,name=music_albums,json=musicAlbums,proto3" json:"music_albums,omitempty"`
}

func (x *GetUserAlbumListResponse) Reset() {
	*x = GetUserAlbumListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAlbumListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAlbumListResponse) ProtoMessage() {}

func (x *GetUserAlbumListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAlbumListResponse.ProtoReflect.Descriptor instead.
func (*GetUserAlbumListResponse) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserAlbumListResponse) GetMusicAlbums() []*MusicAlbumInfo {
	if x != nil {
		return x.MusicAlbums
	}
	return nil
}

type GetOtherAlbumListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicAlbums []*MusicAlbumInfo `protobuf:"bytes,1,rep,name=music_albums,json=musicAlbums,proto3" json:"music_albums,omitempty"`
}

func (x *GetOtherAlbumListResponse) Reset() {
	*x = GetOtherAlbumListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherAlbumListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherAlbumListResponse) ProtoMessage() {}

func (x *GetOtherAlbumListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherAlbumListResponse.ProtoReflect.Descriptor instead.
func (*GetOtherAlbumListResponse) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{8}
}

func (x *GetOtherAlbumListResponse) GetMusicAlbums() []*MusicAlbumInfo {
	if x != nil {
		return x.MusicAlbums
	}
	return nil
}

type GetAlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *GetAlbumRequest) Reset() {
	*x = GetAlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumRequest) ProtoMessage() {}

func (x *GetAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumRequest.ProtoReflect.Descriptor instead.
func (*GetAlbumRequest) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{9}
}

func (x *GetAlbumRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type GetAlbumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicAlbum *MusicAlbumInfo `protobuf:"bytes,1,opt,name=music_album,json=musicAlbum,proto3" json:"music_album,omitempty"`
}

func (x *GetAlbumResponse) Reset() {
	*x = GetAlbumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumResponse) ProtoMessage() {}

func (x *GetAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumResponse.ProtoReflect.Descriptor instead.
func (*GetAlbumResponse) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{10}
}

func (x *GetAlbumResponse) GetMusicAlbum() *MusicAlbumInfo {
	if x != nil {
		return x.MusicAlbum
	}
	return nil
}

type GetAlbumIdListForLibraryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumLibraries []*AlbumLibraryInfo `protobuf:"bytes,1,rep,name=album_libraries,json=albumLibraries,proto3" json:"album_libraries,omitempty"`
}

func (x *GetAlbumIdListForLibraryResponse) Reset() {
	*x = GetAlbumIdListForLibraryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumIdListForLibraryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumIdListForLibraryResponse) ProtoMessage() {}

func (x *GetAlbumIdListForLibraryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musicplayer_v1_musicplayer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumIdListForLibraryResponse.ProtoReflect.Descriptor instead.
func (*GetAlbumIdListForLibraryResponse) Descriptor() ([]byte, []int) {
	return file_musicplayer_v1_musicplayer_proto_rawDescGZIP(), []int{11}
}

func (x *GetAlbumIdListForLibraryResponse) GetAlbumLibraries() []*AlbumLibraryInfo {
	if x != nil {
		return x.AlbumLibraries
	}
	return nil
}

var File_musicplayer_v1_musicplayer_proto protoreflect.FileDescriptor

var file_musicplayer_v1_musicplayer_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x66, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x35, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6b, 0x0a, 0x0e,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x32, 0x0a, 0x10, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x5c, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x53, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x22, 0x6d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x32, 0x97, 0x04, 0x0a, 0x12, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x1f, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x2f,
	0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f,
	0x72, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e,
	0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_musicplayer_v1_musicplayer_proto_rawDescOnce sync.Once
	file_musicplayer_v1_musicplayer_proto_rawDescData = file_musicplayer_v1_musicplayer_proto_rawDesc
)

func file_musicplayer_v1_musicplayer_proto_rawDescGZIP() []byte {
	file_musicplayer_v1_musicplayer_proto_rawDescOnce.Do(func() {
		file_musicplayer_v1_musicplayer_proto_rawDescData = protoimpl.X.CompressGZIP(file_musicplayer_v1_musicplayer_proto_rawDescData)
	})
	return file_musicplayer_v1_musicplayer_proto_rawDescData
}

var file_musicplayer_v1_musicplayer_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_musicplayer_v1_musicplayer_proto_goTypes = []interface{}{
	(*GetAllAlbumListRequest)(nil),           // 0: musicplayer.v1.GetAllAlbumListRequest
	(*GetUserAlbumListRequest)(nil),          // 1: musicplayer.v1.GetUserAlbumListRequest
	(*GetAlbumIdListForLibraryRequest)(nil),  // 2: musicplayer.v1.GetAlbumIdListForLibraryRequest
	(*GetOtherAlbumListRequest)(nil),         // 3: musicplayer.v1.GetOtherAlbumListRequest
	(*MusicAlbumInfo)(nil),                   // 4: musicplayer.v1.MusicAlbumInfo
	(*AlbumLibraryInfo)(nil),                 // 5: musicplayer.v1.AlbumLibraryInfo
	(*GetAllAlbumListResponse)(nil),          // 6: musicplayer.v1.GetAllAlbumListResponse
	(*GetUserAlbumListResponse)(nil),         // 7: musicplayer.v1.GetUserAlbumListResponse
	(*GetOtherAlbumListResponse)(nil),        // 8: musicplayer.v1.GetOtherAlbumListResponse
	(*GetAlbumRequest)(nil),                  // 9: musicplayer.v1.GetAlbumRequest
	(*GetAlbumResponse)(nil),                 // 10: musicplayer.v1.GetAlbumResponse
	(*GetAlbumIdListForLibraryResponse)(nil), // 11: musicplayer.v1.GetAlbumIdListForLibraryResponse
}
var file_musicplayer_v1_musicplayer_proto_depIdxs = []int32{
	4,  // 0: musicplayer.v1.GetAllAlbumListResponse.music_albums:type_name -> musicplayer.v1.MusicAlbumInfo
	4,  // 1: musicplayer.v1.GetUserAlbumListResponse.music_albums:type_name -> musicplayer.v1.MusicAlbumInfo
	4,  // 2: musicplayer.v1.GetOtherAlbumListResponse.music_albums:type_name -> musicplayer.v1.MusicAlbumInfo
	4,  // 3: musicplayer.v1.GetAlbumResponse.music_album:type_name -> musicplayer.v1.MusicAlbumInfo
	5,  // 4: musicplayer.v1.GetAlbumIdListForLibraryResponse.album_libraries:type_name -> musicplayer.v1.AlbumLibraryInfo
	0,  // 5: musicplayer.v1.MusicplayerService.GetAllAlbumList:input_type -> musicplayer.v1.GetAllAlbumListRequest
	1,  // 6: musicplayer.v1.MusicplayerService.GetUserAlbumList:input_type -> musicplayer.v1.GetUserAlbumListRequest
	9,  // 7: musicplayer.v1.MusicplayerService.GetAlbum:input_type -> musicplayer.v1.GetAlbumRequest
	2,  // 8: musicplayer.v1.MusicplayerService.GetAlbumIdListForLibrary:input_type -> musicplayer.v1.GetAlbumIdListForLibraryRequest
	3,  // 9: musicplayer.v1.MusicplayerService.GetOtherAlbumList:input_type -> musicplayer.v1.GetOtherAlbumListRequest
	6,  // 10: musicplayer.v1.MusicplayerService.GetAllAlbumList:output_type -> musicplayer.v1.GetAllAlbumListResponse
	7,  // 11: musicplayer.v1.MusicplayerService.GetUserAlbumList:output_type -> musicplayer.v1.GetUserAlbumListResponse
	10, // 12: musicplayer.v1.MusicplayerService.GetAlbum:output_type -> musicplayer.v1.GetAlbumResponse
	11, // 13: musicplayer.v1.MusicplayerService.GetAlbumIdListForLibrary:output_type -> musicplayer.v1.GetAlbumIdListForLibraryResponse
	8,  // 14: musicplayer.v1.MusicplayerService.GetOtherAlbumList:output_type -> musicplayer.v1.GetOtherAlbumListResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_musicplayer_v1_musicplayer_proto_init() }
func file_musicplayer_v1_musicplayer_proto_init() {
	if File_musicplayer_v1_musicplayer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_musicplayer_v1_musicplayer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAlbumListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAlbumListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumIdListForLibraryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherAlbumListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicAlbumInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumLibraryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAlbumListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAlbumListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherAlbumListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musicplayer_v1_musicplayer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumIdListForLibraryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_musicplayer_v1_musicplayer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_musicplayer_v1_musicplayer_proto_goTypes,
		DependencyIndexes: file_musicplayer_v1_musicplayer_proto_depIdxs,
		MessageInfos:      file_musicplayer_v1_musicplayer_proto_msgTypes,
	}.Build()
	File_musicplayer_v1_musicplayer_proto = out.File
	file_musicplayer_v1_musicplayer_proto_rawDesc = nil
	file_musicplayer_v1_musicplayer_proto_goTypes = nil
	file_musicplayer_v1_musicplayer_proto_depIdxs = nil
}
